[{"name":".babelrc","type":"text/plain","lastModified":1526963763900,"composed":"{\n    \"presets\": [\n        \"es2015\", \"stage-3\"\n    ],\n    \"ignore\": [\n        \"stages/*/code*.js\",\n        \"enchantjs/enchant.js\",\n        \"enchantjs/ui.enchant.js\"\n    ]\n}\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":".env","type":"text/plain","lastModified":1526963763900,"composed":"{\n    \"TITLE\": [\n        \"RPGキット(β)\",\n        \"string\",\n        \"title\"\n    ]\n}\n\n\n\n\n\n\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":".jsbeautifyrc","type":"text/plain","lastModified":1526963763901,"composed":"{\n\t\"html\": {\n\t\t\"indent_with_tabs\": true\n\t},\n\t\"css\": {\n\t\t\"indent_with_tabs\": true,\n\t\t\"indent_inner_html\": true,\n\t\t\"extra_liners\": []\n\t},\n\t\"js\": {\n\t\t\"indent_with_tabs\": true,\n\t\t\"end_with_newline\": true,\n\t\t\"brace_style\": \"collapse,preserve-inline\"\n\t}\n}\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":".jshintrc","type":"text/plain","lastModified":1526963763901,"composed":"{\n\t\"esversion\": 6\n}\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"README.md","type":"text/markdown","lastModified":1526963763902,"composed":"# ゲームスタート\n\n[ゲームスタート](stages/1/index.html)\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"THANKS.md","type":"text/markdown","lastModified":1526963763904,"composed":"# *エンディング*\n\n### つづき\n\n[もっとあそぶ](https://www.hackforplay.xyz/pickup)\n\n### ゲームクリア おめでとうございます！\n\nあなたはオリジナルステージを作れるようになりました！\n\nさっそく下のボタンをクリックして、ステージを作り始めましょう\n\n[あたらしいステージを作る](https://www.hackforplay.xyz/officials/make-rpg)\n\n## もういちど はじめからあそびたい\n\n[はじめからにする](stages/1/index.html)\n\nそれでは……ハックしなければクリアできないゲーム\n**さえもハックしてしまう本当のハックフォープレイ**、\nを おたのしみください！\n\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"feeles/.feelesrc.yml","type":"text/yaml","lastModified":1526963763905,"composed":"homeURL: 'https://www.feeles.com'\nkitIdentifier: com.feeles.hack-rpg\ndisableReloadButton: false\ndisableFullScreenButton: true\nsendCodeOnEnter: true\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"feeles/card.json","type":"application/json","lastModified":1526963763906,"composed":"{\n    \"MonitorCard\": {\n        \"visible\": true,\n        \"order\": 0,\n        \"frame\": {\n            \"size\": [\n                480,\n                320\n            ]\n        }\n    },\n    \"ShotCard\": {\n        \"visible\": false,\n        \"order\": 1,\n        \"init\": {\n            \"fileName\": \"main.js\"\n        }\n    },\n    \"MediaCard\": {\n        \"visible\": false,\n        \"order\": 3\n    },\n    \"EditorCard\": {\n        \"visible\": false,\n        \"order\": 5\n    },\n    \"ReadmeCard\": {\n        \"visible\": false,\n        \"order\": 7\n    },\n    \"ScreenShotCard\": {\n        \"visible\": false,\n        \"order\": 6\n    },\n    \"PaletteCard\": {\n        \"visible\": false,\n        \"order\": 9\n    },\n    \"EnvCard\": {\n        \"visible\": false,\n        \"order\": 8\n    },\n    \"HierarchyCard\": {\n        \"visible\": false,\n        \"order\": 11\n    },\n    \"CustomizeCard\": {\n        \"visible\": false,\n        \"order\": 10\n    },\n    \"CreditsCard\": {\n        \"visible\": false,\n        \"order\": 13\n    }\n}\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"feeles/codemirror.css","type":"text/css","lastModified":1526963763906,"composed":"","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"feeles/eval.js","type":"application/javascript","lastModified":1547038235527,"composed":"let isShowingErrorMessage = false\n\nexport default function(code, raw) {\n\t// エラーメッセージを消す\n\tif (isShowingErrorMessage) {\n\t\tHack.logFunc('', true)\n\t}\n\t// 魔道書の実行をフック\n\ttry {\n\t\t// eval\n\t\teval(code)\n\t\tconst event = new enchant.Event('evaled')\n\t\tevent.code = raw\n\t\tevent.evaledCode = code\n\t\tHack.dispatchEvent(event)\n\t} catch (error) {\n\t\tconsole.error(error)\n\t\tconst message = errorMessage(error)\n\t\t// 次に eval されるか, OK ボタンが押されたら消える\n\t\tisShowingErrorMessage = true\n\t\tHack.logFunc(message, true).then(() => {\n\t\t\tisShowingErrorMessage = false\n\t\t})\n\t}\n}\n\nfunction errorMessage(error) {\n\tswitch (error.message) {\n\t\t// SyntaxError\n\t\tcase 'Unexpected end of input':\n\t\t\treturn 'すうじが きえてしまった みたいだ\\n「=」の あとに なにか すうじを かこう'\n\t\tcase 'Unexpected number':\n\t\t\treturn '= を けして いませんか？\\nもしくは\\n, を けして いませんか？\\nこまったら「元にもどす」を つかおう'\n\t\t// Unknown Error\n\t\tdefault:\n\t\t\treturn 'コードに エラーが あるみたいだ\\nこまったら「元にもどす」して もういちど かこう'\n\t}\n}\n","_transpileCache":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nvar isShowingErrorMessage = false;\n\nfunction _default(code, raw) {\n  // エラーメッセージを消す\n  if (isShowingErrorMessage) {\n    Hack.logFunc('', true);\n  } // 魔道書の実行をフック\n\n\n  try {\n    // eval\n    eval(code);\n    var event = new enchant.Event('evaled');\n    event.code = raw;\n    event.evaledCode = code;\n    Hack.dispatchEvent(event);\n  } catch (error) {\n    console.error(error);\n    var message = errorMessage(error); // 次に eval されるか, OK ボタンが押されたら消える\n\n    isShowingErrorMessage = true;\n    Hack.logFunc(message, true).then(function () {\n      isShowingErrorMessage = false;\n    });\n  }\n}\n\nfunction errorMessage(error) {\n  switch (error.message) {\n    // SyntaxError\n    case 'Unexpected end of input':\n      return 'すうじが きえてしまった みたいだ\\n「=」の あとに なにか すうじを かこう';\n\n    case 'Unexpected number':\n      return '= を けして いませんか？\\nもしくは\\n, を けして いませんか？\\nこまったら「元にもどす」を つかおう';\n    // Unknown Error\n\n    default:\n      return 'コードに エラーが あるみたいだ\\nこまったら「元にもどす」して もういちど かこう';\n  }\n}","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"feeles/extra.dropdown.yml","type":"text/yaml","lastModified":1526963763907,"composed":"ふういん:\n  - body: \"'する'\"\n  - body: \"'やめる'\"\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"feeles/ogp.json","type":"application/json","lastModified":1526963763908,"composed":"{\n    \"og:title\": \"\",\n    \"og:type\": \"website\",\n    \"og:url\": \"\",\n    \"og:description\": \"\",\n    \"og:image\": \"https://embed.hackforplay.xyz/open-source/ogp/rpg-kit.png\",\n    \"og:author\": \"\",\n    \"twitter:card\": \"summary_large_image\",\n    \"twitter:site\": \"\",\n    \"twitter:title\": \"\",\n    \"twitter:description\": \"\",\n    \"twitter:image\": \"https://embed.hackforplay.xyz/open-source/ogp/rpg-kit.png\",\n    \"og:homepage\": \"\",\n    \"og:original\": \"https://kits.feeles.com/hack-rpg.html\"\n}\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"feeles/rpg.dropdown.yml","type":"text/yaml","lastModified":1526963763908,"composed":"スキン:\n  - body: _kきし\n    label: きしのスキン\n  - body: _aあんこくきし\n    label: あんこくきしのスキン\n  - body: _sスライム\n    label: スライムのスキン\n  - body: _iいもむし\n    label: いもむしのスキン\n  - body: _kくも\n    label: くものスキン\n  - body: _kこうもり\n    label: こうもりのスキン\n  - body: _dドラゴン\n    label: ドラゴンのスキン\n  - body: _mミノタウルス\n    label: ミノタウルスのスキン\n  - body: _o男の子\n    label: 男の子のスキン\n  - body: _o女の子\n    label: 女の子のスキン\n  - body: _o女の人\n    label: 女の人のスキン\n  - body: _m魔道書\n    label: 魔道書のスキン\n  - body: _bばくえん\n    label: ばくえんのスキン\n  - body: _uウロボロス\n    label: ウロボロスのスキン\n  - body: _bビーム\n    label: ビームのスキン\n  - body: _kくだりかいだん\n    label: くだりかいだんのスキン\n  - body: _nのぼりかいだん\n    label: のぼりかいだんのスキン\n  - body: _wワープ\n    label: ワープのスキン\n  - body: _sしろ\n    label: しろのスキン\n  - body: _hはな\n    label: はなのスキン\n  - body: _rルビー\n    label: ルビーのスキン\n  - body: _wわな\n    label: わなのスキン\n  - body: _wわなかかった\n    label: わなかかったのスキン\n  - body: _hハート\n    label: ハートのスキン\n  - body: _k木\n    label: 木のスキン\n  - body: _iいわ\n    label: いわのスキン\n  - body: _tつちかべ\n    label: つちかべのスキン\n  - body: _iいしかべ\n    label: いしかべのスキン\n  - body: _tたからばこ\n    label: たからばこのスキン\n  - body: _tたからばこひらいた\n    label: たからばこひらいたのスキン\n  - body: _dドクロ\n    label: ドクロのスキン\n  - body: _uうんこ\n    label: うんこのスキン\n  - body: _tつぼ\n    label: つぼのスキン\n  - body: _dダイヤモンド\n    label: ダイヤモンドのスキン\n  - body: _mまほうじん\n    label: まほうじんのスキン\n  - body: _mまほうじんひかった\n    label: まほうじんひかったのスキン\n  - body: _kコイン\n    label: コインのスキン\n  - body: _sサファイア\n    label: サファイアのスキン\n  - body: _hほし\n    label: ほしのスキン\n  - body: _kかぎ\n    label: かぎのスキン\n  - body: _bばくだん\n    label: ばくだんのスキン\nイベント:\n  - body: \"'とまるとき'\"\n    label: item.walk() や item.attack() などが終わって、動きが止まったときに発生するイベント\n  - body: \"'あるくとき'\"\n    label: item.walk() をコールした後、歩き始めたときに発生するイベント\n  - body: \"'こうげきするとき'\"\n    label: item.attack() をコールした後、攻撃し始めるときに発生するイベント\n  - body: \"'たおれたとき'\"\n    label: item.hp が0以下になったときに発生するイベント\n  - body: \"'こうげきされたとき'\"\n    label: 他のモンスターなどから攻撃されたときに発生するイベント\n  - body: \"'ふれはじめた'\"\n    label: collisionFlag が false のとき、他のものと触れたときに発生するイベント\n  - body: \"'ぶつかった'\"\n    label: collisionFlag が true のとき、他のものとぶつかったときに発生するイベント\n  - body: \"'HPかわった'\"\n    label: item.hp が変化したときに発生するイベント\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"feeles/style.feelesrc.yml","type":"text/yaml","lastModified":1526963763909,"composed":"enableShadow: true\nenableTransition: true\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"index.html","type":"text/html","lastModified":1526963763910,"composed":"<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"utf-8\">\n        <title></title>\n        <script>\n\t\t\n\t\t\tfeeles.replace('stages/1/index.html');\n\t\t\n\t\t</script>\n    </head>\n    <body>\n    </body>\n</html>\n\n\n\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"lib/interrupt.js","type":"application/javascript","lastModified":1547038235528,"composed":"const a_href = false\nconst img_src = false\nconst audio_src = false\nconst script_src = false\nconst xhr_url = true\n\n// Hyper link\nif (a_href) {\n\tconst hrefLoader = (node, href, set) => {\n\t\tset(`javascript: feeles.replace('${href}');`)\n\t}\n\tinterruptSetter(HTMLAnchorElement, 'href', hrefLoader)\n}\n\n// Image source\nif (img_src) {\n\tinterruptSetter(HTMLImageElement, 'src', resourceLoader)\n}\n\n// Audio source\nif (audio_src) {\n\tinterruptSetter(HTMLAudioElement, 'src', resourceLoader)\n}\n\n// Script source\nif (script_src) {\n\tinterruptSetter(HTMLScriptElement, 'src', resourceLoader)\n}\n\n// XHR open()\nif (xhr_url) {\n\tinterruptXHR(XMLHttpRequest)\n}\n\n/**\n * @param node: HTMLElement\n * @param src: String\n * @param set: Function\n */\nfunction resourceLoader(node, src, set) {\n\tif (src.startsWith('data:')) return set(src)\n\tif (src.startsWith('blob:')) return set(src)\n\n\tif (!isSameOrigin(src)) {\n\t\tset(src)\n\t\treturn\n\t}\n\t// If relative path:\n\tfeeles\n\t\t.fetch(getFeelesName(src))\n\t\t.then(response => response.blob())\n\t\t.then(blob => {\n\t\t\tconst url = URL.createObjectURL(blob)\n\t\t\tconst revokeHandler = () => {\n\t\t\t\tnode.removeEventListener('load', revokeHandler)\n\t\t\t\tnode.removeEventListener('error', revokeHandler)\n\t\t\t\tURL.revokeObjectURL(url)\n\t\t\t}\n\t\t\tnode.addEventListener('load', revokeHandler)\n\t\t\tnode.addEventListener('error', revokeHandler)\n\n\t\t\tset(url)\n\t\t})\n}\n\n/**\n * @param constructor: HTMLElement\n * @param attr: String\n * @param delegate: Function(\n *\t node: HTMLElement,\n *\t value: any,\n *\t set: Function\n * )\n */\nfunction interruptSetter(constructor, attr, delegate) {\n\tconst proto = constructor.prototype\n\tconst desc = Object.getOwnPropertyDescriptor(proto, attr)\n\tObject.defineProperty(proto, attr, {\n\t\tset: function(value) {\n\t\t\tdelegate(this, value, desc.set.bind(this))\n\t\t}\n\t})\n}\n\n/**\n * @param constructor: XMLHttpRequest\n * @param attr: String\n * @param delegate: Function(\n *\t node: HTMLElement,\n *\t value: any,\n *\t set: Function\n * )\n */\nfunction interruptXHR(constructor) {\n\tconst { open, send } = constructor.prototype\n\n\tObject.defineProperty(constructor.prototype, 'open', {\n\t\tvalue: interruptOpen\n\t})\n\n\tfunction interruptOpen(\n\t\t_method,\n\t\t_url,\n\t\t_async = true,\n\t\t_user = '',\n\t\t_password = ''\n\t) {\n\t\tif (_async === false) {\n\t\t\tthrow new Error(\n\t\t\t\t'feeles.XMLHttpRequest does not support synchronization requests.'\n\t\t\t)\n\t\t}\n\t\tif (!isSameOrigin(_url)) {\n\t\t\topen.call(this, _method, _url, _async, _user, _password)\n\t\t\treturn\n\t\t}\n\t\tthis.send = function(...sendArgs) {\n\t\t\tfeeles\n\t\t\t\t.fetch(getFeelesName(_url))\n\t\t\t\t.then(response => response.blob())\n\t\t\t\t.then(blob => {\n\t\t\t\t\tconst url = URL.createObjectURL(blob)\n\n\t\t\t\t\tconst revokeHandler = () => {\n\t\t\t\t\t\tthis.removeEventListener('load', revokeHandler)\n\t\t\t\t\t\tthis.removeEventListener('error', revokeHandler)\n\t\t\t\t\t\tthis.removeEventListener('abort', revokeHandler)\n\t\t\t\t\t\tURL.revokeObjectURL(url)\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.addEventListener('load', revokeHandler)\n\t\t\t\t\tthis.addEventListener('error', revokeHandler)\n\t\t\t\t\tthis.addEventListener('abort', revokeHandler)\n\n\t\t\t\t\topen.call(this, _method, url, _async, _user, _password)\n\t\t\t\t\tsend.apply(this, sendArgs)\n\t\t\t\t})\n\t\t}\n\t}\n}\n\nconst currentOrigin = getOrigin('')\nconst baseURL = (() => {\n\tconst a = document.createElement('a')\n\ta.href = ''\n\n\tif (!a.href) {\n\t\treturn ''\n\t}\n\n\t// \tIf a.origin === \"null\" (e.g. Open in Blob URL), a.pathname doesn't work.\n\tif (a.origin === 'null') {\n\t\treturn 'http://fake.origin/'\n\t}\n\n\tconst index = a.href.lastIndexOf('/')\n\treturn a.href.substr(0, index + 1)\n})()\n\n/**\n * @param url: String\n * @return String\n */\nfunction getFeelesName(url) {\n\tif (baseURL) {\n\t\tconst fullPath = new URL(url, baseURL).href\n\t\treturn fullPath.substr(baseURL.length)\n\t}\n\treturn url\n}\n\n/**\n * @param url: String\n * @return Boolean\n */\nfunction isSameOrigin(url) {\n\treturn getOrigin(url) === currentOrigin\n}\n\n/**\n * @param url: String\n * @return String\n */\nfunction getOrigin(url) {\n\tconst a = document.createElement('a')\n\ta.href = url\n\treturn a.origin\n}\n","_transpileCache":"\"use strict\";\n\nvar a_href = false;\nvar img_src = false;\nvar audio_src = false;\nvar script_src = false;\nvar xhr_url = true; // Hyper link\n\nif (a_href) {\n  var hrefLoader = function hrefLoader(node, href, set) {\n    set(\"javascript: feeles.replace('\".concat(href, \"');\"));\n  };\n\n  interruptSetter(HTMLAnchorElement, 'href', hrefLoader);\n} // Image source\n\n\nif (img_src) {\n  interruptSetter(HTMLImageElement, 'src', resourceLoader);\n} // Audio source\n\n\nif (audio_src) {\n  interruptSetter(HTMLAudioElement, 'src', resourceLoader);\n} // Script source\n\n\nif (script_src) {\n  interruptSetter(HTMLScriptElement, 'src', resourceLoader);\n} // XHR open()\n\n\nif (xhr_url) {\n  interruptXHR(XMLHttpRequest);\n}\n/**\n * @param node: HTMLElement\n * @param src: String\n * @param set: Function\n */\n\n\nfunction resourceLoader(node, src, set) {\n  if (src.startsWith('data:')) return set(src);\n  if (src.startsWith('blob:')) return set(src);\n\n  if (!isSameOrigin(src)) {\n    set(src);\n    return;\n  } // If relative path:\n\n\n  feeles.fetch(getFeelesName(src)).then(function (response) {\n    return response.blob();\n  }).then(function (blob) {\n    var url = URL.createObjectURL(blob);\n\n    var revokeHandler = function revokeHandler() {\n      node.removeEventListener('load', revokeHandler);\n      node.removeEventListener('error', revokeHandler);\n      URL.revokeObjectURL(url);\n    };\n\n    node.addEventListener('load', revokeHandler);\n    node.addEventListener('error', revokeHandler);\n    set(url);\n  });\n}\n/**\n * @param constructor: HTMLElement\n * @param attr: String\n * @param delegate: Function(\n *\t node: HTMLElement,\n *\t value: any,\n *\t set: Function\n * )\n */\n\n\nfunction interruptSetter(constructor, attr, delegate) {\n  var proto = constructor.prototype;\n  var desc = Object.getOwnPropertyDescriptor(proto, attr);\n  Object.defineProperty(proto, attr, {\n    set: function set(value) {\n      delegate(this, value, desc.set.bind(this));\n    }\n  });\n}\n/**\n * @param constructor: XMLHttpRequest\n * @param attr: String\n * @param delegate: Function(\n *\t node: HTMLElement,\n *\t value: any,\n *\t set: Function\n * )\n */\n\n\nfunction interruptXHR(constructor) {\n  var _constructor$prototyp = constructor.prototype,\n      open = _constructor$prototyp.open,\n      send = _constructor$prototyp.send;\n  Object.defineProperty(constructor.prototype, 'open', {\n    value: interruptOpen\n  });\n\n  function interruptOpen(_method, _url) {\n    var _async = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    var _user = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n\n    var _password = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';\n\n    if (_async === false) {\n      throw new Error('feeles.XMLHttpRequest does not support synchronization requests.');\n    }\n\n    if (!isSameOrigin(_url)) {\n      open.call(this, _method, _url, _async, _user, _password);\n      return;\n    }\n\n    this.send = function () {\n      var _this = this;\n\n      for (var _len = arguments.length, sendArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n        sendArgs[_key] = arguments[_key];\n      }\n\n      feeles.fetch(getFeelesName(_url)).then(function (response) {\n        return response.blob();\n      }).then(function (blob) {\n        var url = URL.createObjectURL(blob);\n\n        var revokeHandler = function revokeHandler() {\n          _this.removeEventListener('load', revokeHandler);\n\n          _this.removeEventListener('error', revokeHandler);\n\n          _this.removeEventListener('abort', revokeHandler);\n\n          URL.revokeObjectURL(url);\n        };\n\n        _this.addEventListener('load', revokeHandler);\n\n        _this.addEventListener('error', revokeHandler);\n\n        _this.addEventListener('abort', revokeHandler);\n\n        open.call(_this, _method, url, _async, _user, _password);\n        send.apply(_this, sendArgs);\n      });\n    };\n  }\n}\n\nvar currentOrigin = getOrigin('');\n\nvar baseURL = function () {\n  var a = document.createElement('a');\n  a.href = '';\n\n  if (!a.href) {\n    return '';\n  } // \tIf a.origin === \"null\" (e.g. Open in Blob URL), a.pathname doesn't work.\n\n\n  if (a.origin === 'null') {\n    return 'http://fake.origin/';\n  }\n\n  var index = a.href.lastIndexOf('/');\n  return a.href.substr(0, index + 1);\n}();\n/**\n * @param url: String\n * @return String\n */\n\n\nfunction getFeelesName(url) {\n  if (baseURL) {\n    var fullPath = new URL(url, baseURL).href;\n    return fullPath.substr(baseURL.length);\n  }\n\n  return url;\n}\n/**\n * @param url: String\n * @return Boolean\n */\n\n\nfunction isSameOrigin(url) {\n  return getOrigin(url) === currentOrigin;\n}\n/**\n * @param url: String\n * @return String\n */\n\n\nfunction getOrigin(url) {\n  var a = document.createElement('a');\n  a.href = url;\n  return a.origin;\n}","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"lib/polyfill.js","type":"application/javascript","lastModified":1547038235529,"composed":"if (!Math.sign) {\n\tMath.sign = function(x) {\n\t\tx = +x // convert to a number\n\t\tif (x === 0 || isNaN(x)) {\n\t\t\treturn x\n\t\t}\n\t\treturn x > 0 ? 1 : -1\n\t}\n}\n\nif (!Array.prototype.fill) {\n\tArray.prototype.fill = function(value) {\n\t\t// Steps 1-2.\n\t\tif (this == null) {\n\t\t\tthrow new TypeError('this is null or not defined')\n\t\t}\n\n\t\tvar O = Object(this)\n\n\t\t// Steps 3-5.\n\t\tvar len = O.length >>> 0\n\n\t\t// Steps 6-7.\n\t\tvar start = arguments[1]\n\t\tvar relativeStart = start >> 0\n\n\t\t// Step 8.\n\t\tvar k =\n\t\t\trelativeStart < 0\n\t\t\t\t? Math.max(len + relativeStart, 0)\n\t\t\t\t: Math.min(relativeStart, len)\n\n\t\t// Steps 9-10.\n\t\tvar end = arguments[2]\n\t\tvar relativeEnd = end === undefined ? len : end >> 0\n\n\t\t// Step 11.\n\t\tvar final =\n\t\t\trelativeEnd < 0\n\t\t\t\t? Math.max(len + relativeEnd, 0)\n\t\t\t\t: Math.min(relativeEnd, len)\n\n\t\t// Step 12.\n\t\twhile (k < final) {\n\t\t\tO[k] = value\n\t\t\tk++\n\t\t}\n\n\t\t// Step 13.\n\t\treturn O\n\t}\n}\n\nif (!('currentTransform' in CanvasRenderingContext2D.prototype)) {\n\tif ('mozCurrentTransform' in CanvasRenderingContext2D.prototype) {\n\t\tObject.defineProperty(\n\t\t\tCanvasRenderingContext2D.prototype,\n\t\t\t'currentTransform',\n\t\t\t{\n\t\t\t\tget: function() {\n\t\t\t\t\tvar m = this.mozCurrentTransform\n\t\t\t\t\treturn { a: m[0], b: m[1], c: m[2], d: m[3], e: m[4], f: m[5] }\n\t\t\t\t},\n\t\t\t\tset: function(x) {\n\t\t\t\t\tthis.mozCurrentTransform = [x.a, x.b, x.c, x.d, x.e, x.f]\n\t\t\t\t},\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: false\n\t\t\t}\n\t\t)\n\t} else if ('webkitCurrentTransform' in CanvasRenderingContext2D.prototype) {\n\t\tObject.defineProperty(\n\t\t\tCanvasRenderingContext2D.prototype,\n\t\t\t'currentTransform',\n\t\t\t{\n\t\t\t\tget: function() {\n\t\t\t\t\treturn this.webkitCurrentTransform\n\t\t\t\t},\n\t\t\t\tset: function(x) {\n\t\t\t\t\tthis.webkitCurrentTransform = x\n\t\t\t\t},\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: false\n\t\t\t}\n\t\t)\n\t} else {\n\t\tObject.defineProperty(\n\t\t\tCanvasRenderingContext2D.prototype,\n\t\t\t'currentTransform',\n\t\t\t{\n\t\t\t\tget: function() {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t(this._t2stack && this._t2stack[this._t2stack.length - 1]) || {\n\t\t\t\t\t\t\ta: 1,\n\t\t\t\t\t\t\tb: 0,\n\t\t\t\t\t\t\tc: 0,\n\t\t\t\t\t\t\td: 1,\n\t\t\t\t\t\t\te: 0,\n\t\t\t\t\t\t\tf: 0\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t},\n\t\t\t\tset: function(x) {\n\t\t\t\t\tif (!this._t2stack) this._t2stack = [{}]\n\t\t\t\t\tthis._t2stack[this._t2stack.length - 1] = {\n\t\t\t\t\t\ta: x.a,\n\t\t\t\t\t\tb: x.b,\n\t\t\t\t\t\tc: x.c,\n\t\t\t\t\t\td: x.d,\n\t\t\t\t\t\te: x.e,\n\t\t\t\t\t\tf: x.f\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: false\n\t\t\t}\n\t\t)\n\t\tCanvasRenderingContext2D.prototype.save = (function() {\n\t\t\tvar save = CanvasRenderingContext2D.prototype.save\n\t\t\treturn function() {\n\t\t\t\tif (!this._t2stack)\n\t\t\t\t\tthis._t2stack = [{ a: 1, b: 0, c: 0, d: 1, e: 0, f: 0 }]\n\t\t\t\tvar t = this._t2stack[this._t2stack.length - 1]\n\t\t\t\tthis._t2stack.push(\n\t\t\t\t\tt && { a: t.a, b: t.b, c: t.c, d: t.d, e: t.e, f: t.f }\n\t\t\t\t)\n\t\t\t\tsave.call(this)\n\t\t\t}\n\t\t})()\n\t\tCanvasRenderingContext2D.prototype.restore = (function() {\n\t\t\tvar restore = CanvasRenderingContext2D.prototype.restore\n\t\t\treturn function() {\n\t\t\t\tif (this._t2stack) this._t2stack.pop()\n\t\t\t\trestore.call(this)\n\t\t\t}\n\t\t})()\n\t\tCanvasRenderingContext2D.prototype.transform = (function() {\n\t\t\tvar transform = CanvasRenderingContext2D.prototype.transform\n\t\t\treturn function(a, b, c, d, e, f) {\n\t\t\t\tif (!this._t2stack)\n\t\t\t\t\tthis._t2stack = [{ a: 1, b: 0, c: 0, d: 1, e: 0, f: 0 }]\n\t\t\t\tvar t = this._t2stack[this._t2stack.length - 1],\n\t\t\t\t\tq\n\t\t\t\tvar na = t.a * a + t.c * b\n\t\t\t\tvar nb = t.b * a + t.d * b\n\t\t\t\tvar nc = t.a * c + t.c * d\n\t\t\t\tvar nd = t.b * c + t.d * d\n\t\t\t\tvar ne = t.e + t.a * e + t.c * f\n\t\t\t\tvar nf = t.f + t.b * e + t.d * f\n\t\t\t\tt.a = na\n\t\t\t\tt.b = nb\n\t\t\t\tt.c = nc\n\t\t\t\tt.d = nd\n\t\t\t\tt.e = ne\n\t\t\t\tt.f = nf\n\t\t\t\ttransform.call(this, a, b, c, d, e, f)\n\t\t\t}\n\t\t})()\n\t\tCanvasRenderingContext2D.prototype.setTransform = (function() {\n\t\t\tvar setTransform = CanvasRenderingContext2D.prototype.setTransform\n\t\t\treturn function(a, b, c, d, e, f) {\n\t\t\t\tif (!this._t2stack) this._t2stack = [{}]\n\t\t\t\tthis._t2stack[this._t2stack.length - 1] = {\n\t\t\t\t\ta: a,\n\t\t\t\t\tb: b,\n\t\t\t\t\tc: c,\n\t\t\t\t\td: d,\n\t\t\t\t\te: e,\n\t\t\t\t\tf: f\n\t\t\t\t}\n\t\t\t\tsetTransform.call(this, a, b, c, d, e, f)\n\t\t\t}\n\t\t})()\n\t\tCanvasRenderingContext2D.prototype.resetTransform = (function() {\n\t\t\tvar resetTransform = CanvasRenderingContext2D.prototype.resetTransform\n\t\t\treturn function() {\n\t\t\t\tif (!this._t2stack) this._t2stack = [{}]\n\t\t\t\tthis._t2stack[this._t2stack.length - 1] = {\n\t\t\t\t\ta: 1,\n\t\t\t\t\tb: 0,\n\t\t\t\t\tc: 0,\n\t\t\t\t\td: 1,\n\t\t\t\t\te: 0,\n\t\t\t\t\tf: 0\n\t\t\t\t}\n\t\t\t\tresetTransform && resetTransform.call(this)\n\t\t\t}\n\t\t})()\n\t\tCanvasRenderingContext2D.prototype.scale = (function() {\n\t\t\tvar scale = CanvasRenderingContext2D.prototype.scale\n\t\t\treturn function(sx, sy) {\n\t\t\t\tif (!this._t2stack)\n\t\t\t\t\tthis._t2stack = [{ a: 1, b: 0, c: 0, d: 1, e: 0, f: 0 }]\n\t\t\t\tvar t = this._t2stack[this._t2stack.length - 1]\n\t\t\t\tsx = sx || 1\n\t\t\t\tsy = sy || sx\n\t\t\t\tt.a *= sx\n\t\t\t\tt.c *= sy\n\t\t\t\tt.b *= sx\n\t\t\t\tt.d *= sy\n\t\t\t\tscale.call(this, sx, sy)\n\t\t\t}\n\t\t})()\n\t\tCanvasRenderingContext2D.prototype.rotate = (function() {\n\t\t\tvar rotate = CanvasRenderingContext2D.prototype.rotate\n\t\t\treturn function(w) {\n\t\t\t\tif (!this._t2stack)\n\t\t\t\t\tthis._t2stack = [{ a: 1, b: 0, c: 0, d: 1, e: 0, f: 0 }]\n\t\t\t\tvar t = this._t2stack[this._t2stack.length - 1]\n\n\t\t\t\tvar cw = Math.cos(-w)\n\t\t\t\tvar sw = Math.sin(-w)\n\n\t\t\t\tvar a = t.a * cw - t.c * sw\n\t\t\t\tvar b = t.b * cw - t.d * sw\n\t\t\t\tvar c = t.c * cw + t.a * sw\n\t\t\t\tvar d = t.d * cw + t.b * sw\n\n\t\t\t\tt.a = a\n\t\t\t\tt.b = b\n\t\t\t\tt.c = c\n\t\t\t\tt.d = d\n\n\t\t\t\treturn rotate.call(this, w)\n\t\t\t}\n\t\t})()\n\t\tCanvasRenderingContext2D.prototype.translate = (function() {\n\t\t\tvar translate = CanvasRenderingContext2D.prototype.translate\n\t\t\treturn function(x, y) {\n\t\t\t\tif (!this._t2stack)\n\t\t\t\t\tthis._t2stack = [{ a: 1, b: 0, c: 0, d: 1, e: 0, f: 0 }]\n\t\t\t\tvar t = this._t2stack[this._t2stack.length - 1]\n\t\t\t\tt.e += x * t.a + y * t.c\n\t\t\t\tt.f += x * t.b + y * t.d\n\t\t\t\treturn translate.call(this, x, y)\n\t\t\t}\n\t\t})()\n\t}\n}\n","_transpileCache":"\"use strict\";\n\nif (!Math.sign) {\n  Math.sign = function (x) {\n    x = +x; // convert to a number\n\n    if (x === 0 || isNaN(x)) {\n      return x;\n    }\n\n    return x > 0 ? 1 : -1;\n  };\n}\n\nif (!Array.prototype.fill) {\n  Array.prototype.fill = function (value) {\n    // Steps 1-2.\n    if (this == null) {\n      throw new TypeError('this is null or not defined');\n    }\n\n    var O = Object(this); // Steps 3-5.\n\n    var len = O.length >>> 0; // Steps 6-7.\n\n    var start = arguments[1];\n    var relativeStart = start >> 0; // Step 8.\n\n    var k = relativeStart < 0 ? Math.max(len + relativeStart, 0) : Math.min(relativeStart, len); // Steps 9-10.\n\n    var end = arguments[2];\n    var relativeEnd = end === undefined ? len : end >> 0; // Step 11.\n\n    var final = relativeEnd < 0 ? Math.max(len + relativeEnd, 0) : Math.min(relativeEnd, len); // Step 12.\n\n    while (k < final) {\n      O[k] = value;\n      k++;\n    } // Step 13.\n\n\n    return O;\n  };\n}\n\nif (!('currentTransform' in CanvasRenderingContext2D.prototype)) {\n  if ('mozCurrentTransform' in CanvasRenderingContext2D.prototype) {\n    Object.defineProperty(CanvasRenderingContext2D.prototype, 'currentTransform', {\n      get: function get() {\n        var m = this.mozCurrentTransform;\n        return {\n          a: m[0],\n          b: m[1],\n          c: m[2],\n          d: m[3],\n          e: m[4],\n          f: m[5]\n        };\n      },\n      set: function set(x) {\n        this.mozCurrentTransform = [x.a, x.b, x.c, x.d, x.e, x.f];\n      },\n      enumerable: true,\n      configurable: false\n    });\n  } else if ('webkitCurrentTransform' in CanvasRenderingContext2D.prototype) {\n    Object.defineProperty(CanvasRenderingContext2D.prototype, 'currentTransform', {\n      get: function get() {\n        return this.webkitCurrentTransform;\n      },\n      set: function set(x) {\n        this.webkitCurrentTransform = x;\n      },\n      enumerable: true,\n      configurable: false\n    });\n  } else {\n    Object.defineProperty(CanvasRenderingContext2D.prototype, 'currentTransform', {\n      get: function get() {\n        return this._t2stack && this._t2stack[this._t2stack.length - 1] || {\n          a: 1,\n          b: 0,\n          c: 0,\n          d: 1,\n          e: 0,\n          f: 0\n        };\n      },\n      set: function set(x) {\n        if (!this._t2stack) this._t2stack = [{}];\n        this._t2stack[this._t2stack.length - 1] = {\n          a: x.a,\n          b: x.b,\n          c: x.c,\n          d: x.d,\n          e: x.e,\n          f: x.f\n        };\n      },\n      enumerable: true,\n      configurable: false\n    });\n\n    CanvasRenderingContext2D.prototype.save = function () {\n      var save = CanvasRenderingContext2D.prototype.save;\n      return function () {\n        if (!this._t2stack) this._t2stack = [{\n          a: 1,\n          b: 0,\n          c: 0,\n          d: 1,\n          e: 0,\n          f: 0\n        }];\n        var t = this._t2stack[this._t2stack.length - 1];\n\n        this._t2stack.push(t && {\n          a: t.a,\n          b: t.b,\n          c: t.c,\n          d: t.d,\n          e: t.e,\n          f: t.f\n        });\n\n        save.call(this);\n      };\n    }();\n\n    CanvasRenderingContext2D.prototype.restore = function () {\n      var restore = CanvasRenderingContext2D.prototype.restore;\n      return function () {\n        if (this._t2stack) this._t2stack.pop();\n        restore.call(this);\n      };\n    }();\n\n    CanvasRenderingContext2D.prototype.transform = function () {\n      var transform = CanvasRenderingContext2D.prototype.transform;\n      return function (a, b, c, d, e, f) {\n        if (!this._t2stack) this._t2stack = [{\n          a: 1,\n          b: 0,\n          c: 0,\n          d: 1,\n          e: 0,\n          f: 0\n        }];\n        var t = this._t2stack[this._t2stack.length - 1],\n            q;\n        var na = t.a * a + t.c * b;\n        var nb = t.b * a + t.d * b;\n        var nc = t.a * c + t.c * d;\n        var nd = t.b * c + t.d * d;\n        var ne = t.e + t.a * e + t.c * f;\n        var nf = t.f + t.b * e + t.d * f;\n        t.a = na;\n        t.b = nb;\n        t.c = nc;\n        t.d = nd;\n        t.e = ne;\n        t.f = nf;\n        transform.call(this, a, b, c, d, e, f);\n      };\n    }();\n\n    CanvasRenderingContext2D.prototype.setTransform = function () {\n      var setTransform = CanvasRenderingContext2D.prototype.setTransform;\n      return function (a, b, c, d, e, f) {\n        if (!this._t2stack) this._t2stack = [{}];\n        this._t2stack[this._t2stack.length - 1] = {\n          a: a,\n          b: b,\n          c: c,\n          d: d,\n          e: e,\n          f: f\n        };\n        setTransform.call(this, a, b, c, d, e, f);\n      };\n    }();\n\n    CanvasRenderingContext2D.prototype.resetTransform = function () {\n      var resetTransform = CanvasRenderingContext2D.prototype.resetTransform;\n      return function () {\n        if (!this._t2stack) this._t2stack = [{}];\n        this._t2stack[this._t2stack.length - 1] = {\n          a: 1,\n          b: 0,\n          c: 0,\n          d: 1,\n          e: 0,\n          f: 0\n        };\n        resetTransform && resetTransform.call(this);\n      };\n    }();\n\n    CanvasRenderingContext2D.prototype.scale = function () {\n      var scale = CanvasRenderingContext2D.prototype.scale;\n      return function (sx, sy) {\n        if (!this._t2stack) this._t2stack = [{\n          a: 1,\n          b: 0,\n          c: 0,\n          d: 1,\n          e: 0,\n          f: 0\n        }];\n        var t = this._t2stack[this._t2stack.length - 1];\n        sx = sx || 1;\n        sy = sy || sx;\n        t.a *= sx;\n        t.c *= sy;\n        t.b *= sx;\n        t.d *= sy;\n        scale.call(this, sx, sy);\n      };\n    }();\n\n    CanvasRenderingContext2D.prototype.rotate = function () {\n      var rotate = CanvasRenderingContext2D.prototype.rotate;\n      return function (w) {\n        if (!this._t2stack) this._t2stack = [{\n          a: 1,\n          b: 0,\n          c: 0,\n          d: 1,\n          e: 0,\n          f: 0\n        }];\n        var t = this._t2stack[this._t2stack.length - 1];\n        var cw = Math.cos(-w);\n        var sw = Math.sin(-w);\n        var a = t.a * cw - t.c * sw;\n        var b = t.b * cw - t.d * sw;\n        var c = t.c * cw + t.a * sw;\n        var d = t.d * cw + t.b * sw;\n        t.a = a;\n        t.b = b;\n        t.c = c;\n        t.d = d;\n        return rotate.call(this, w);\n      };\n    }();\n\n    CanvasRenderingContext2D.prototype.translate = function () {\n      var translate = CanvasRenderingContext2D.prototype.translate;\n      return function (x, y) {\n        if (!this._t2stack) this._t2stack = [{\n          a: 1,\n          b: 0,\n          c: 0,\n          d: 1,\n          e: 0,\n          f: 0\n        }];\n        var t = this._t2stack[this._t2stack.length - 1];\n        t.e += x * t.a + y * t.c;\n        t.f += x * t.b + y * t.d;\n        return translate.call(this, x, y);\n      };\n    }();\n  }\n}","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"snippets/Event.json","type":"application/json","lastModified":1526963763912,"composed":"{\n    \".source.js\": {\n        \"onbecomeidle\": {\n            \"prefix\": \"onbecomeidle\",\n            \"body\": \"item.onbecomeidle = () => {\\n\\t\\n};\",\n            \"leftLabel\": \"止まったとき\",\n            \"description\": \"item.walk() や item.attack() などが終わって、動きが止まったときに発生するイベント\",\n            \"descriptionMoreURL\": \"https://github.com/hackforplay/wiki-RPG/wiki/止まったとき\"\n        },\n        \"onbecomewalk\": {\n            \"prefix\": \"onbecomewalk\",\n            \"body\": \"item.onbecomewalk = () => {\\n\\t\\n};\",\n            \"leftLabel\": \"歩くとき\",\n            \"description\": \"item.walk() をコールした後、歩き始めたときに発生するイベント\",\n            \"descriptionMoreURL\": \"https://github.com/hackforplay/wiki-RPG/wiki/歩くとき\"\n        },\n        \"onbecomeattack\": {\n            \"prefix\": \"onbecomeattack\",\n            \"body\": \"item.onbecomeattack = () => {\\n\\t\\n};\",\n            \"leftLabel\": \"攻撃するとき\",\n            \"description\": \"item.attack() をコールした後、攻撃し始めるときに発生するイベント\",\n            \"descriptionMoreURL\": \"https://github.com/hackforplay/wiki-RPG/wiki/攻撃するとき\"\n        },\n        \"onbecomedead\": {\n            \"prefix\": \"onbecomedead\",\n            \"body\": \"item.onbecomedead = () => {\\n\\t\\n};\",\n            \"leftLabel\": \"倒れたとき\",\n            \"description\": \"item.hp が0以下になったときに発生するイベント\",\n            \"descriptionMoreURL\": \"https://github.com/hackforplay/wiki-RPG/wiki/倒れたとき\"\n        },\n        \"onattacked\": {\n            \"prefix\": \"onattacked\",\n            \"body\": \"item.onattacked = () => {\\n\\t\\n};\",\n            \"leftLabel\": \"攻撃されたとき\",\n            \"description\": \"他のモンスターなどから攻撃されたときに発生するイベント\",\n            \"descriptionMoreURL\": \"https://github.com/hackforplay/wiki-RPG/wiki/攻撃されたとき\"\n        },\n        \"ontriggerenter\": {\n            \"prefix\": \"ontriggerenter\",\n            \"body\": \"item.ontriggerenter = () => {\\n\\t\\n};\",\n            \"leftLabel\": \"触れたとき\",\n            \"description\": \"collisionFlag が false のとき、他のものと触れたときに発生するイベント\",\n            \"descriptionMoreURL\": \"https://github.com/hackforplay/wiki-RPG/wiki/触れたとき\"\n        },\n        \"oncollided\": {\n            \"prefix\": \"oncollided\",\n            \"body\": \"item.oncollided = () => {\\n\\t\\n};\",\n            \"leftLabel\": \"ぶつかったとき\",\n            \"description\": \"collisionFlag が true のとき、他のものとぶつかったときに発生するイベント\",\n            \"descriptionMoreURL\": \"https://github.com/hackforplay/wiki-RPG/wiki/ぶつかったとき\"\n        },\n        \"onhpchange\": {\n            \"prefix\": \"onhpchange\",\n            \"body\": \"item.onhpchange = () => {\\n\\t\\n};\",\n            \"leftLabel\": \"体力が変わったとき\",\n            \"description\": \"item.hp が変化したときに発生するイベント\",\n            \"descriptionMoreURL\": \"https://github.com/hackforplay/wiki-RPG/wiki/体力が変わったとき\"\n        },\n        \"onscorechange\": {\n            \"prefix\": \"onscorechange\",\n            \"body\": \"Hack.onscorechange = () => {\\n\\t\\n};\",\n            \"leftLabel\": \"スコアが変わったとき\",\n            \"description\": \"Hack.score が変化したときに発生するイベント\",\n            \"descriptionMoreURL\": \"https://github.com/hackforplay/wiki-RPG/wiki/スコアが変わったとき\"\n        },\n        \"ongameclear\": {\n            \"prefix\": \"ongameclear\",\n            \"body\": \"Hack.ongameclear = () => {\\n\\t\\n};\",\n            \"leftLabel\": \"ゲームクリアしたとき\",\n            \"description\": \"ゲームクリアしたときに発生するイベント\",\n            \"descriptionMoreURL\": \"https://github.com/hackforplay/wiki-RPG/wiki/ゲームクリアしたとき\"\n        },\n        \"ongameover\": {\n            \"prefix\": \"ongameover\",\n            \"body\": \"Hack.ongameover = () => {\\n\\t\\n};\",\n            \"leftLabel\": \"ゲームオーバーになったとき\",\n            \"description\": \"ゲームオーバーになったときに発生するイベント\",\n            \"descriptionMoreURL\": \"https://github.com/hackforplay/wiki-RPG/wiki/ゲームオーバーになったとき\"\n        }\n    }\n}\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"snippets/Hack.json","type":"application/json","lastModified":1526963763913,"composed":"{\n    \".source.js\": {\n        \"log\": {\n            \"prefix\": \"Hacklog\",\n            \"body\": \"Hack.log();\",\n            \"leftLabel\": \"ログ\",\n            \"description\": \"ゲーム画面に好きな文字や数字を出せる\",\n            \"descriptionMoreURL\": \"https://github.com/hackforplay/wiki-RPG/wiki/ログ\"\n        },\n        \"score\": {\n            \"prefix\": \"Hackscore\",\n            \"body\": \"Hack.score\",\n            \"leftLabel\": \"スコア\",\n            \"description\": \"ゲームの現在のスコアが入っている。　Hack.score += 1; でスコアを1増やせる\",\n            \"descriptionMoreURL\": \"https://github.com/hackforplay/wiki-RPG/wiki/スコア\"\n        },\n        \"gameclear\": {\n            \"prefix\": \"Hackgameclear\",\n            \"body\": \"Hack.gameclear();\",\n            \"leftLabel\": \"ゲームクリア\",\n            \"description\": \"ゲームクリアにする。すでにゲームオーバーになっている場合をのぞく\",\n            \"descriptionMoreURL\": \"https://github.com/hackforplay/wiki-RPG/wiki/ゲームクリア\"\n        },\n        \"gameover\": {\n            \"prefix\": \"Hackgameover\",\n            \"body\": \"Hack.gameover();\",\n            \"leftLabel\": \"ゲームオーバー\",\n            \"description\": \"ゲームオーバーにする。すでにゲームクリアになっている場合をのぞく\",\n            \"descriptionMoreURL\": \"https://github.com/hackforplay/wiki-RPG/wiki/ゲームオーバー\"\n        },\n        \"Attack\": {\n            \"prefix\": \"HackAttack\",\n            \"body\": \"Hack.Attack(7, 5, 1);\",\n            \"leftLabel\": \"アタック\",\n            \"description\": \"そのマスにダメージを与える。マップの(7, 5)にいるキャラクターに1のダメージを与える\",\n            \"descriptionMoreURL\": \"https://github.com/hackforplay/wiki-RPG/wiki/アタック\"\n        },\n        \"changeMap\": {\n            \"prefix\": \"HackchangeMap\",\n            \"body\": \"Hack.changeMap('map2');\",\n            \"leftLabel\": \"マップ移動\",\n            \"description\": \"マップを移動する。マップ「map2」があればそこに移動する\",\n            \"descriptionMoreURL\": \"https://github.com/hackforplay/wiki-RPG/wiki/マップ移動\"\n        },\n        \"clearLog\": {\n            \"prefix\": \"HackclearLog\",\n            \"body\": \"Hack.clearLog();\",\n            \"leftLabel\": \"ログ消去\",\n            \"description\": \"ログを全て消去する\",\n            \"descriptionMoreURL\": \"https://github.com/hackforplay/wiki-RPG/wiki/ログ消去\"\n        },\n        \"isPlaying\": {\n            \"prefix\": \"HackisPlaying\",\n            \"body\": \"if (Hack.isPlaying) {\\n\\t// プレイ中\\n} else {\\n\\t// 終了している\\n}\",\n            \"leftLabel\": \"プレイ中か\",\n            \"description\": \"ゲームが終了していないか調べる。ゲームクリアかゲームオーバーしたら終了と判断する\",\n            \"descriptionMoreURL\": \"https://github.com/hackforplay/wiki-RPG/wiki/プレイ中か\"\n        }\n    }\n}\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"snippets/よく使う構文.json","type":"application/json","lastModified":1526963763913,"composed":"{\n    \".source.js\": {\n        \"const_string\": {\n            \"prefix\": \"const(文字)\",\n            \"body\": \"const 名前 = 'ここに書いた文字に名前をつける';\",\n            \"leftLabel\": \"文字の変数\",\n            \"description\": \"その文字に名前をつける。同じ名前は２度使えないので、名前は書き換えよう\"\n        },\n        \"const_number\": {\n            \"prefix\": \"const(数字)\",\n            \"body\": \"const 名前 = 0;\",\n            \"leftLabel\": \"数字の変数\",\n            \"description\": \"その数字に名前をつける。同じ名前は２度使えないので、名前は書き換えよう\"\n        },\n        \"const_bool\": {\n            \"prefix\": \"const(真偽)\",\n            \"body\": \"const 名前 = true;\",\n            \"leftLabel\": \"真偽の変数\",\n            \"description\": \"true または false に名前をつける。同じ名前は２度使えないので、名前は書き換えよう\"\n        },\n        \"if\": {\n            \"prefix\": \"if\",\n            \"body\": \"if (true) {\\n\\t\\n}\",\n            \"leftLabel\": \"イフ\",\n            \"description\": \"コンストの中身が true または 0以外の数字 かどうかを調べる\"\n        },\n        \"for\": {\n            \"prefix\": \"for\",\n            \"body\": \"for (let i = 0; i < 10; i++) {\\n\\t\\n}\",\n            \"leftLabel\": \"フォー\",\n            \"description\": \"コードの実行を繰り返す。 0 と 10 のとき、10回繰り返す\"\n        },\n        \"function\": {\n            \"prefix\": \"function\",\n            \"body\": \"function 名前() {\\n\\t\\n}\",\n            \"leftLabel\": \"ファンクション\",\n            \"description\": \"コードの実行に名前をつけて、「名前();」で呼び出せるようにする\"\n        },\n        \"arrowfunc\": {\n            \"prefix\": \"arrowfunc\",\n            \"body\": \"const 名前 = () => {\\n\\t\\n};\",\n            \"leftLabel\": \"アローファンクション\",\n            \"description\": \"ファンクションより短く書ける。functionより色々と単純になっている\"\n        }\n    }\n}\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"snippets/便利.json","type":"application/json","lastModified":1526963763914,"composed":"{\n    \".source.js\": {\n        \"alert\": {\n            \"prefix\": \"alert\",\n            \"body\": \"alert('ここに文字を入れる');\",\n            \"leftLabel\": \"アラート\",\n            \"description\": \"好きな文字でダイアログを出せる\"\n        },\n        \"confirm\": {\n            \"prefix\": \"confirm\",\n            \"body\": \"if (confirm('ここに文字を入れる')) {\\n\\t// YESのとき\\n} else {\\n\\t// NOのとき\\n}\",\n            \"leftLabel\": \"質問\",\n            \"description\": \"好きな質問文でダイアログを出して、その結果によってコードを実行できる\"\n        },\n        \"log\": {\n            \"prefix\": \"log\",\n            \"body\": \"console.log('ここに文字を入れる')\",\n            \"leftLabel\": \"ログ\",\n            \"description\": \"開発者用の画面(F12)に文字を出すことができる。普通の画面からは見えない\"\n        },\n        \"error\": {\n            \"prefix\": \"error\",\n            \"body\": \"console.error('ここに文字を入れる')\",\n            \"leftLabel\": \"エラーログ\",\n            \"description\": \"開発者用の画面(F12)に赤い文字を出すことができる。普通の画面からは見えない\"\n        },\n        \"import\": {\n            \"prefix\": \"import\",\n            \"body\": \"import from 'インポートするファイルの名前';\",\n            \"leftLabel\": \"インポート\",\n            \"description\": \"別のファイルを読み込んで、そのファイルに書かれたコードも実行する\"\n        },\n        \"export\": {\n            \"prefix\": \"export\",\n            \"body\": \"export default 別のファイルで使いたい変数;\",\n            \"leftLabel\": \"エクスポート\",\n            \"description\": \"このファイルが別のファイルからインポートされる時、変数をひとつ送る\"\n        }\n    }\n}\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"stages/1/README.md","type":"text/markdown","lastModified":1526963763916,"composed":"# 地上　*はじまりの森*\n\nうみべ を 歩いていたら ダンジョンの 入り口を 見つけた！\n\nスライムを　たおせば ダンジョンに 入れそうだ\n\n\n- - -\n\n## そうさほうほう\n\n![](hackforplay/setumei_idou.png)\n\nキーボードの **やじるしキー** で プレイヤー を　うごかせます\n\n![](hackforplay/setumei_kougeki.png)\n\nスライムの ちかくで **スペースキー** を おすと こうげき できます\n\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"stages/1/index.html","type":"text/html","lastModified":1526963763918,"composed":"<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>1 はじまりの森</title>\n\t\t<link rel=\"stylesheet\" href=\"style.css\">\n\t\t<script src=\"lib/polyfill.js\"></script>\n\t\t<script src=\"lib/interrupt.js\"></script>\n\t\t<script src=\"stages/1/main.js\"></script>\n\t</head>\n\t<body>\n\t</body>\n</html>","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"stages/1/main.js","type":"application/javascript","lastModified":1547038235530,"composed":"import { enchant, Hack, register } from 'http://localhost:8080/main.js'\n\nimport extra from '../extra'\nimport createMap from './maps'\n\nregister(window)\n\nfunction gameStart() {\n\tgame.dispatchEvent(new enchant.Event('awake'))\n\n\t// map1 を読み込む\n\tHack.changeMap('map1')\n\n\t// 解説の youtube を開く\n\t// const youtube = new RPGObject();\n\t// youtube.mod(Hack.assets.village);\n\t// youtube.locate(6, 3);\n\t// youtube.on('addtrodden', event => {\n\t// \tif (event.item === Hack.player) {\n\t// \t\tfeeles.openMedia({\n\t// \t\t\turl: 'https://youtu.be/VDPRV91o984',\n\t// \t\t\tplaying: true,\n\t// \t\t\tcontrols: true,\n\t// \t\t\tvolume: 0.2\n\t// \t\t});\n\t// \t}\n\t// });\n\n\t// 説明書を表示する\n\t// feeles.openReadme('stages/1/README.md');\n\n\t// プレイヤー（騎士）\n\tconst player = (Hack.player = new Player(('▼ スキン', _kきし)))\n\tplayer.mod(('▼ スキン', _kきし))\n\t// プレイヤーを　3,　5 の位置に移動する\n\tplayer.locate(3, 5)\n\t// プレイヤーの体力\n\tplayer.hp = 3\n\t// プレイヤーの攻撃力\n\tplayer.atk = 1\n\t// プレイヤーがやられたら...\n\tplayer.onたおれたとき = function() {\n\t\t// プレイヤーを削除\n\t\tthis.destroy()\n\t\t// ゲームオーバー\n\t\tHack.gameover()\n\t}\n\n\t// スライム\n\tconst item1 = new RPGObject()\n\titem1.mod(('▼ スキン', _sスライム))\n\t// スライムの体力\n\titem1.hp = 3\n\t// スライムの攻撃力\n\titem1.atk = 1\n\t// スライムを 9, 5 の位置に移動する ( map1 )\n\titem1.locate(9, 5, 'map1')\n\t// スライムが攻撃されたら\n\titem1.on('attacked', () => {\n\t\t// 1.4秒後に...\n\t\tsetTimeout(() => {\n\t\t\tif (item1.behavior === BehaviorTypes.Idle) {\n\t\t\t\t// 反撃する！（攻撃する）\n\t\t\t\titem1.attack()\n\t\t\t}\n\t\t}, 1400)\n\t\t// 1400 は、 1.4 秒のこと\n\t})\n\n\t// 階段\n\tconst item2 = new RPGObject()\n\titem2.mod(('▼ スキン', _kくだりかいだん))\n\t// 階段を 12, 5 の位置に移動 ( map1 )\n\titem2.locate(12, 5, 'map1')\n\t// 階段にプレイヤーが乗ったら...\n\titem2.onふまれた = event => {\n\t\tif (event.item === Hack.player) {\n\t\t\t// 次のステージに！\n\t\t\tfeeles.replace('stages/3/index.html')\n\t\t}\n\t}\n\n\t// そうさせつめい (1)\n\tHack.logAtPoint('やじるしキーを おして\\nキャラクターを うごしてみよう', 3, 5)\n\n\t// そうさせつめい (2)\n\tlet attacked = false\n\tplayer.once('becomeattack', () => {\n\t\tattacked = true\n\t})\n\tHack.logFunc(next =>\n\t\tattacked\n\t\t\t? next()\n\t\t\t: `\nスペースキーを おして\nこうげき してみよう`\n\t)\n\n\t// そうさせつめい (3)\n\tHack.logFunc(next =>\n\t\titem1.hp >= 3\n\t\t\t? `\nスライムに ちかづいて\nこうげき してみよう！`\n\t\t\t: next()\n\t)\n\n\t// そうさせつめい (4)\n\titem1.once('becomedead', () => {\n\t\tHack.logFunc(`\nスライムは たおれた！\nかいだんを おりよう`)\n\t})\n\n\t// このステージを改造\n\textra(6, 9, 'map1', 'stages/1/main.js')\n}\n\ngame.onload = gameStart\nHack.on('load', createMap)\nHack.start()\n","_transpileCache":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _main = require(\"http://localhost:8080/main.js\");\n\nvar _extra = _interopRequireDefault(require(\"../extra\"));\n\nvar _maps = _interopRequireDefault(require(\"./maps\"));\n\n(0, _main.register)(window);\n\nfunction gameStart() {\n  game.dispatchEvent(new _main.enchant.Event('awake')); // map1 を読み込む\n\n  _main.Hack.changeMap('map1'); // 解説の youtube を開く\n  // const youtube = new RPGObject();\n  // youtube.mod(Hack.assets.village);\n  // youtube.locate(6, 3);\n  // youtube.on('addtrodden', event => {\n  // \tif (event.item === Hack.player) {\n  // \t\tfeeles.openMedia({\n  // \t\t\turl: 'https://youtu.be/VDPRV91o984',\n  // \t\t\tplaying: true,\n  // \t\t\tcontrols: true,\n  // \t\t\tvolume: 0.2\n  // \t\t});\n  // \t}\n  // });\n  // 説明書を表示する\n  // feeles.openReadme('stages/1/README.md');\n  // プレイヤー（騎士）\n\n\n  var player = _main.Hack.player = new Player(('▼ スキン', _kきし));\n  player.mod(('▼ スキン', _kきし)); // プレイヤーを　3,　5 の位置に移動する\n\n  player.locate(3, 5); // プレイヤーの体力\n\n  player.hp = 3; // プレイヤーの攻撃力\n\n  player.atk = 1; // プレイヤーがやられたら...\n\n  player.onたおれたとき = function () {\n    // プレイヤーを削除\n    this.destroy(); // ゲームオーバー\n\n    _main.Hack.gameover();\n  }; // スライム\n\n\n  var item1 = new RPGObject();\n  item1.mod(('▼ スキン', _sスライム)); // スライムの体力\n\n  item1.hp = 3; // スライムの攻撃力\n\n  item1.atk = 1; // スライムを 9, 5 の位置に移動する ( map1 )\n\n  item1.locate(9, 5, 'map1'); // スライムが攻撃されたら\n\n  item1.on('attacked', function () {\n    // 1.4秒後に...\n    setTimeout(function () {\n      if (item1.behavior === BehaviorTypes.Idle) {\n        // 反撃する！（攻撃する）\n        item1.attack();\n      }\n    }, 1400); // 1400 は、 1.4 秒のこと\n  }); // 階段\n\n  var item2 = new RPGObject();\n  item2.mod(('▼ スキン', _kくだりかいだん)); // 階段を 12, 5 の位置に移動 ( map1 )\n\n  item2.locate(12, 5, 'map1'); // 階段にプレイヤーが乗ったら...\n\n  item2.onふまれた = function (event) {\n    if (event.item === _main.Hack.player) {\n      // 次のステージに！\n      feeles.replace('stages/3/index.html');\n    }\n  }; // そうさせつめい (1)\n\n\n  _main.Hack.logAtPoint('やじるしキーを おして\\nキャラクターを うごしてみよう', 3, 5); // そうさせつめい (2)\n\n\n  var attacked = false;\n  player.once('becomeattack', function () {\n    attacked = true;\n  });\n\n  _main.Hack.logFunc(function (next) {\n    return attacked ? next() : \"\\n\\u30B9\\u30DA\\u30FC\\u30B9\\u30AD\\u30FC\\u3092 \\u304A\\u3057\\u3066\\n\\u3053\\u3046\\u3052\\u304D \\u3057\\u3066\\u307F\\u3088\\u3046\";\n  }); // そうさせつめい (3)\n\n\n  _main.Hack.logFunc(function (next) {\n    return item1.hp >= 3 ? \"\\n\\u30B9\\u30E9\\u30A4\\u30E0\\u306B \\u3061\\u304B\\u3065\\u3044\\u3066\\n\\u3053\\u3046\\u3052\\u304D \\u3057\\u3066\\u307F\\u3088\\u3046\\uFF01\" : next();\n  }); // そうさせつめい (4)\n\n\n  item1.once('becomedead', function () {\n    _main.Hack.logFunc(\"\\n\\u30B9\\u30E9\\u30A4\\u30E0\\u306F \\u305F\\u304A\\u308C\\u305F\\uFF01\\n\\u304B\\u3044\\u3060\\u3093\\u3092 \\u304A\\u308A\\u3088\\u3046\");\n  }); // このステージを改造\n\n  (0, _extra.default)(6, 9, 'map1', 'stages/1/main.js');\n}\n\ngame.onload = gameStart;\n\n_main.Hack.on('load', _maps.default);\n\n_main.Hack.start();","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/1/maps.js","type":"application/javascript","lastModified":1538873336682,"composed":"export default function createMap() {\n\t// map1 というマップを作る\n\tconst mapName = 'map1';\n\n\t// 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\tconst map = new RPGMap(32, 32, 15, 10);\n\n\tmap.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\tconst ___ = -1;\n\n\t// マップの地形をつくる\n\tmap.bmap.loadData(\n\t\t[\n\t\t\t[\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t204,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205\n\t\t\t],\n\t\t\t[\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t204,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205\n\t\t\t],\n\t\t\t[\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t204,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205\n\t\t\t],\n\t\t\t[\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t204,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t166,\n\t\t\t\t225,\n\t\t\t\t225,\n\t\t\t\t225,\n\t\t\t\t167\n\t\t\t],\n\t\t\t[\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t224,\n\t\t\t\t225,\n\t\t\t\t225,\n\t\t\t\t226,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t204\n\t\t\t],\n\t\t\t[\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t204\n\t\t\t],\n\t\t\t[\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t184,\n\t\t\t\t185,\n\t\t\t\t185,\n\t\t\t\t186,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t204\n\t\t\t],\n\t\t\t[\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t204,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t164,\n\t\t\t\t185,\n\t\t\t\t185,\n\t\t\t\t185,\n\t\t\t\t165\n\t\t\t],\n\t\t\t[322, 322, 322, 322, 322, 24, 26, 204, 205, 205, 205, 205, 205, 205, 205],\n\t\t\t[322, 322, 322, 322, 322, 64, 66, 204, 205, 205, 205, 205, 205, 205, 205]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t462,\n\t\t\t\t461,\n\t\t\t\t462,\n\t\t\t\t461,\n\t\t\t\t462,\n\t\t\t\t461,\n\t\t\t\t462,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t482,\n\t\t\t\t481,\n\t\t\t\t482,\n\t\t\t\t481,\n\t\t\t\t482,\n\t\t\t\t481,\n\t\t\t\t482,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t462,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t421,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t482,\n\t\t\t\t___,\n\t\t\t\t421,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t421,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t421,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t421,\n\t\t\t\t___,\n\t\t\t\t421,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t421,\n\t\t\t\t___,\n\t\t\t\t421,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t421,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t]\n\t\t]\n\t);\n\n\t// マップの歩ける場所を決める\n\t// 1 なら歩けないし、 0 なら歩ける\n\tmap.cmap = [\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n\t\t[1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1],\n\t\t[1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1]\n\t];\n\n\tHack.maps[mapName] = map;\n}\n","_transpileCache":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createMap;\n\nfunction createMap() {\n  // map1 というマップを作る\n  var mapName = 'map1'; // 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\n  var map = new RPGMap(32, 32, 15, 10);\n  map.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\n  var ___ = -1; // マップの地形をつくる\n\n\n  map.bmap.loadData([[322, 322, 322, 322, 322, 322, 322, 204, 205, 205, 205, 205, 205, 205, 205], [322, 322, 322, 322, 322, 322, 322, 204, 205, 205, 205, 205, 205, 205, 205], [322, 322, 322, 322, 322, 322, 322, 204, 205, 205, 205, 205, 205, 205, 205], [322, 322, 322, 322, 322, 322, 322, 204, 205, 205, 166, 225, 225, 225, 167], [322, 322, 322, 322, 322, 322, 322, 224, 225, 225, 226, 322, 322, 322, 204], [322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 204], [322, 322, 322, 322, 322, 322, 322, 184, 185, 185, 186, 322, 322, 322, 204], [322, 322, 322, 322, 322, 322, 322, 204, 205, 205, 164, 185, 185, 185, 165], [322, 322, 322, 322, 322, 24, 26, 204, 205, 205, 205, 205, 205, 205, 205], [322, 322, 322, 322, 322, 64, 66, 204, 205, 205, 205, 205, 205, 205, 205]], [[462, 461, 462, 461, 462, 461, 462, ___, ___, ___, ___, ___, ___, ___, ___], [482, 481, 482, 481, 482, 481, 482, ___, ___, ___, ___, ___, ___, ___, ___], [462, ___, ___, 421, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___], [482, ___, 421, ___, ___, 421, ___, ___, ___, ___, ___, ___, ___, ___, ___], [___, 421, ___, ___, 421, ___, 421, ___, ___, ___, ___, ___, ___, ___, ___], [___, ___, 421, ___, 421, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___], [___, ___, ___, ___, ___, ___, 421, ___, ___, ___, ___, ___, ___, ___, ___], [___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___], [___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___], [___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___]]); // マップの歩ける場所を決める\n  // 1 なら歩けないし、 0 なら歩ける\n\n  map.cmap = [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1]];\n  Hack.maps[mapName] = map;\n}","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/3/README.md","type":"text/markdown","lastModified":1526963763926,"composed":"# 地下 1階　*CODE の 魔法*\n\nダンジョン にも モンスター が うじゃうじゃいる\n\nそれも 強そうな てき ばかり……\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"stages/3/README2.md","type":"text/markdown","lastModified":1526963763927,"composed":"# *?*??*???*??*?*\n\n### *魔道書 を 手にした えらばれし ものよ……*\n\n### *CODE の 魔法 ここに 復活 せり.*\n\n### *世界 の 理 を 書きかえる 力を 汝に あたえん*\n\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"stages/3/code.js","type":"application/javascript","lastModified":1535170467879,"composed":"// そのスライムは つよさが \"バグってる\" のだ\n// どうやら hp (たいりょく)が たかすぎ らしい\n\nスライム.hp = 999\n//       まずは ↑ココ を クリックしてみよう\n// 「Backspace」キー を おすと すうじを けせるよ\n// たいりょく を すきな すうじに かえられるよ\n\n// かきかえたら「コードをおくる」ボタンを おそう！\n\nイモムシ.hp = 9999\n//        つぎは ↑ココ も。こっちはイモムシだ\n","_transpileCache":"\"use strict\";\n\n// そのスライムは つよさが \"バグってる\" のだ\n// どうやら hp (たいりょく)が たかすぎ らしい\nスライム.hp = 999; //       まずは ↑ココ を クリックしてみよう\n// 「Backspace」キー を おすと すうじを けせるよ\n// たいりょく を すきな すうじに かえられるよ\n// かきかえたら「コードをおくる」ボタンを おそう！\n\nイモムシ.hp = 9999; //        つぎは ↑ココ も。こっちはイモムシだ","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/3/index.html","type":"text/html","lastModified":1526963763929,"composed":"<!DOCTYPE html>\n<html>\n\n<head>\n\t<meta charset=\"utf-8\">\n\t<title>3 CODEの魔法</title>\n\t<link rel=\"stylesheet\" href=\"style.css\">\n\t<script src=\"lib/polyfill.js\"></script>\n\t<script src=\"lib/interrupt.js\"></script>\n\t<script src=\"stages/3/main.js\"></script>\n</head>\n\n<body>\n</body>\n\n</html>","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"stages/3/main.js","type":"application/javascript","lastModified":1547038235531,"composed":"import { enchant, Hack, register } from 'http://localhost:8080/main.js'\nimport { gameclear, prepareUtils } from '../../utils'\nimport extra from '../extra'\nimport createMap from './maps'\n\nregister(window)\nprepareUtils()\n\nfunction gameStart() {\n\tgame.dispatchEvent(new enchant.Event('awake'))\n\n\t// map1 を読み込む\n\tHack.changeMap('map1')\n\n\t// コードをとじる\n\tfeeles.closeCode()\n\n\t// 解説の youtube を開く\n\t// const youtube = new RPGObject();\n\t// youtube.mod(Hack.assets.village);\n\t// youtube.locate(0, 4);\n\t// youtube.on('addtrodden', event => {\n\t// \tif (event.item === Hack.player) {\n\t// \t\tfeeles.openMedia({\n\t// \t\t\turl: 'https://youtu.be/Xvnw8kE-EXw',\n\t// \t\t\tplaying: true,\n\t// \t\t\tcontrols: true,\n\t// \t\t\tvolume: 0.2\n\t// \t\t});\n\t// \t}\n\t// });\n\n\t// 説明書を表示する\n\t// feeles.openReadme('stages/3/README.md');\n\n\t// プレイヤー（騎士）\n\tconst player = (Hack.player = new Player(('▼ スキン', _kきし)))\n\tplayer.mod(('▼ スキン', _kきし))\n\t// プレイヤーを 3, 5 の位置に移動する\n\tplayer.locate(3, 5)\n\t// プレイヤーの体力\n\tplayer.hp = 3\n\t// プレイヤーの攻撃力\n\tplayer.atk = 1\n\t// プレイヤーがやられたら...\n\tplayer.onたおれたとき = function() {\n\t\t// プレイヤーを削除\n\t\tthis.destroy()\n\t\t// ゲームオーバー\n\t\tHack.gameover()\n\t}\n\n\t// 魔道書にプレイヤーを登録する\n\tfeeles.setAlias('プレイヤー', player)\n\n\t// まどうしょ\n\tconst item1 = new RPGObject()\n\titem1.mod(('▼ スキン', Skin.マドウショ))\n\t// 魔道書を 5, 3 の位置に移動する\n\titem1.locate(5, 3)\n\t// 魔道書にプレイヤーが乗ったら...\n\titem1.onふまれた = event => {\n\t\tif (event.item === Hack.player) {\n\t\t\t// 説明書 2 を開く\n\t\t\t// feeles.openReadme('stages/3/README2.md');\n\t\t\t// 魔道書を開く\n\t\t\tfeeles.openCode('stages/3/code.js')\n\t\t\t// 魔道書を削除\n\t\t\titem1.destroy()\n\t\t\tHack.logFunc('マドウショが あらわれた！\\nじっくりと よんでみよう')\n\t\t}\n\t}\n\n\t// スライム\n\tconst item2 = new RPGObject()\n\titem2.mod(('▼ スキン', _sスライム))\n\t// スライムの体力\n\titem2.hp = 999\n\t// スライムを 7, 5 の位置に移動する ( map1 )\n\titem2.locate(7, 5, 'map1')\n\n\t// 魔道書にスライムを登録する\n\tfeeles.setAlias('スライム', item2)\n\n\t// イモムシ\n\tconst item3 = new RPGObject()\n\titem3.mod(('▼ スキン', _iいもむし))\n\t// イモムシの体力\n\titem3.hp = 9999\n\t// イモムシを 5, 7 の位置に移動する ( map1 )\n\titem3.locate(5, 7, 'map1')\n\n\t// 魔道書にスライムを登録する\n\tfeeles.setAlias('イモムシ', item3)\n\n\t// かいだん\n\tconst item4 = new RPGObject()\n\titem4.mod(('▼ スキン', _kくだりかいだん))\n\t// 階段を 7, 9 の位置に移動する ( map1 )\n\titem4.locate(7, 9, 'map1')\n\t// 階段は下の方に配置する ( Under )\n\titem4.layer = RPGMap.Layer.Under\n\t// 階段にプレイヤーが乗ったら...\n\titem4.onふまれた = event => {\n\t\tif (event.item === Hack.player) {\n\t\t\t// 次のステージに！\n\t\t\tgameclear('stages/4/index.html')\n\t\t}\n\t}\n\n\t// まどうしょがやってくるぞ…\n\tconst logほんを = next =>\n\t\titem1.parentNode ? 'ほんを ひろってみよう' : next()\n\tlet story = () => {\n\t\titem2.removeEventListener('attacked', story)\n\t\titem3.removeEventListener('attacked', story)\n\t\t// 魔道書: 60f まつ -> 下に32 ずれる -> 45f まつ -> 下に32 ずれる\n\t\titem1.tl\n\t\t\t.delay(60)\n\t\t\t.moveBy(0, 32, 30)\n\t\t\t.then(() => item1.updateCollider())\n\t\t\t.delay(45)\n\t\t\t.moveBy(0, 32, 30)\n\t\t\t.then(() => item1.updateCollider())\n\t\t\t.then(() => {\n\t\t\t\tHack.logFunc(logほんを)\n\t\t\t})\n\t}\n\titem2.on('attacked', story)\n\titem3.on('attacked', story)\n\tconst logそのままだとスライム = next =>\n\t\titem2.hp > 900\n\t\t\t? `\nそのままだと あと${item2.hp / Hack.player.atk}回\nこうげきしないと たおせないぞ\n右にある マドウショを よもう`\n\t\t\t: next()\n\titem2.on('attacked', () => {\n\t\tif (!item1.parentNode) {\n\t\t\t// 魔道書を拾ったのに攻撃し続けている\n\t\t\tHack.logFunc(logそのままだとスライム, true)\n\t\t}\n\t})\n\tconst logそのままだとイモムシ = next =>\n\t\titem3.hp > 9000\n\t\t\t? `\nそのままだと あと${item3.hp / Hack.player.atk}回\nこうげきしないと たおせないぞ\n右にある マドウショを よもう`\n\t\t\t: next()\n\titem3.on('attacked', () => {\n\t\tif (!item1.parentNode) {\n\t\t\t// 魔道書を拾ったのに攻撃し続けている\n\t\t\tHack.logFunc(logそのままだとイモムシ, true)\n\t\t}\n\t})\n\n\t// コードが eval され, SyntaxError がなかったとき\n\tHack.on('evaled', () => {\n\t\tHack.logFunc(\n\t\t\t`スライムのたいりょくが ${item2.hp} になった！\nイモムシのたいりょくが ${item3.hp} になった！`,\n\t\t\ttrue\n\t\t)\n\t})\n\n\t// このステージを改造\n\textra(5, 1, 'map1', 'stages/3/main.js')\n}\n\ngame.onload = gameStart\nHack.on('load', createMap)\nHack.start()\n","_transpileCache":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _main = require(\"http://localhost:8080/main.js\");\n\nvar _utils = require(\"../../utils\");\n\nvar _extra = _interopRequireDefault(require(\"../extra\"));\n\nvar _maps = _interopRequireDefault(require(\"./maps\"));\n\n(0, _main.register)(window);\n(0, _utils.prepareUtils)();\n\nfunction gameStart() {\n  game.dispatchEvent(new _main.enchant.Event('awake')); // map1 を読み込む\n\n  _main.Hack.changeMap('map1'); // コードをとじる\n\n\n  feeles.closeCode(); // 解説の youtube を開く\n  // const youtube = new RPGObject();\n  // youtube.mod(Hack.assets.village);\n  // youtube.locate(0, 4);\n  // youtube.on('addtrodden', event => {\n  // \tif (event.item === Hack.player) {\n  // \t\tfeeles.openMedia({\n  // \t\t\turl: 'https://youtu.be/Xvnw8kE-EXw',\n  // \t\t\tplaying: true,\n  // \t\t\tcontrols: true,\n  // \t\t\tvolume: 0.2\n  // \t\t});\n  // \t}\n  // });\n  // 説明書を表示する\n  // feeles.openReadme('stages/3/README.md');\n  // プレイヤー（騎士）\n\n  var player = _main.Hack.player = new Player(('▼ スキン', _kきし));\n  player.mod(('▼ スキン', _kきし)); // プレイヤーを 3, 5 の位置に移動する\n\n  player.locate(3, 5); // プレイヤーの体力\n\n  player.hp = 3; // プレイヤーの攻撃力\n\n  player.atk = 1; // プレイヤーがやられたら...\n\n  player.onたおれたとき = function () {\n    // プレイヤーを削除\n    this.destroy(); // ゲームオーバー\n\n    _main.Hack.gameover();\n  }; // 魔道書にプレイヤーを登録する\n\n\n  feeles.setAlias('プレイヤー', player); // まどうしょ\n\n  var item1 = new RPGObject();\n  item1.mod(('▼ スキン', Skin.マドウショ)); // 魔道書を 5, 3 の位置に移動する\n\n  item1.locate(5, 3); // 魔道書にプレイヤーが乗ったら...\n\n  item1.onふまれた = function (event) {\n    if (event.item === _main.Hack.player) {\n      // 説明書 2 を開く\n      // feeles.openReadme('stages/3/README2.md');\n      // 魔道書を開く\n      feeles.openCode('stages/3/code.js'); // 魔道書を削除\n\n      item1.destroy();\n\n      _main.Hack.logFunc('マドウショが あらわれた！\\nじっくりと よんでみよう');\n    }\n  }; // スライム\n\n\n  var item2 = new RPGObject();\n  item2.mod(('▼ スキン', _sスライム)); // スライムの体力\n\n  item2.hp = 999; // スライムを 7, 5 の位置に移動する ( map1 )\n\n  item2.locate(7, 5, 'map1'); // 魔道書にスライムを登録する\n\n  feeles.setAlias('スライム', item2); // イモムシ\n\n  var item3 = new RPGObject();\n  item3.mod(('▼ スキン', _iいもむし)); // イモムシの体力\n\n  item3.hp = 9999; // イモムシを 5, 7 の位置に移動する ( map1 )\n\n  item3.locate(5, 7, 'map1'); // 魔道書にスライムを登録する\n\n  feeles.setAlias('イモムシ', item3); // かいだん\n\n  var item4 = new RPGObject();\n  item4.mod(('▼ スキン', _kくだりかいだん)); // 階段を 7, 9 の位置に移動する ( map1 )\n\n  item4.locate(7, 9, 'map1'); // 階段は下の方に配置する ( Under )\n\n  item4.layer = RPGMap.Layer.Under; // 階段にプレイヤーが乗ったら...\n\n  item4.onふまれた = function (event) {\n    if (event.item === _main.Hack.player) {\n      // 次のステージに！\n      (0, _utils.gameclear)('stages/4/index.html');\n    }\n  }; // まどうしょがやってくるぞ…\n\n\n  var logほんを = function logほんを(next) {\n    return item1.parentNode ? 'ほんを ひろってみよう' : next();\n  };\n\n  var story = function story() {\n    item2.removeEventListener('attacked', story);\n    item3.removeEventListener('attacked', story); // 魔道書: 60f まつ -> 下に32 ずれる -> 45f まつ -> 下に32 ずれる\n\n    item1.tl.delay(60).moveBy(0, 32, 30).then(function () {\n      return item1.updateCollider();\n    }).delay(45).moveBy(0, 32, 30).then(function () {\n      return item1.updateCollider();\n    }).then(function () {\n      _main.Hack.logFunc(logほんを);\n    });\n  };\n\n  item2.on('attacked', story);\n  item3.on('attacked', story);\n\n  var logそのままだとスライム = function logそのままだとスライム(next) {\n    return item2.hp > 900 ? \"\\n\\u305D\\u306E\\u307E\\u307E\\u3060\\u3068 \\u3042\\u3068\".concat(item2.hp / _main.Hack.player.atk, \"\\u56DE\\n\\u3053\\u3046\\u3052\\u304D\\u3057\\u306A\\u3044\\u3068 \\u305F\\u304A\\u305B\\u306A\\u3044\\u305E\\n\\u53F3\\u306B\\u3042\\u308B \\u30DE\\u30C9\\u30A6\\u30B7\\u30E7\\u3092 \\u3088\\u3082\\u3046\") : next();\n  };\n\n  item2.on('attacked', function () {\n    if (!item1.parentNode) {\n      // 魔道書を拾ったのに攻撃し続けている\n      _main.Hack.logFunc(logそのままだとスライム, true);\n    }\n  });\n\n  var logそのままだとイモムシ = function logそのままだとイモムシ(next) {\n    return item3.hp > 9000 ? \"\\n\\u305D\\u306E\\u307E\\u307E\\u3060\\u3068 \\u3042\\u3068\".concat(item3.hp / _main.Hack.player.atk, \"\\u56DE\\n\\u3053\\u3046\\u3052\\u304D\\u3057\\u306A\\u3044\\u3068 \\u305F\\u304A\\u305B\\u306A\\u3044\\u305E\\n\\u53F3\\u306B\\u3042\\u308B \\u30DE\\u30C9\\u30A6\\u30B7\\u30E7\\u3092 \\u3088\\u3082\\u3046\") : next();\n  };\n\n  item3.on('attacked', function () {\n    if (!item1.parentNode) {\n      // 魔道書を拾ったのに攻撃し続けている\n      _main.Hack.logFunc(logそのままだとイモムシ, true);\n    }\n  }); // コードが eval され, SyntaxError がなかったとき\n\n  _main.Hack.on('evaled', function () {\n    _main.Hack.logFunc(\"\\u30B9\\u30E9\\u30A4\\u30E0\\u306E\\u305F\\u3044\\u308A\\u3087\\u304F\\u304C \".concat(item2.hp, \" \\u306B\\u306A\\u3063\\u305F\\uFF01\\n\\u30A4\\u30E2\\u30E0\\u30B7\\u306E\\u305F\\u3044\\u308A\\u3087\\u304F\\u304C \").concat(item3.hp, \" \\u306B\\u306A\\u3063\\u305F\\uFF01\"), true);\n  }); // このステージを改造\n\n\n  (0, _extra.default)(5, 1, 'map1', 'stages/3/main.js');\n}\n\ngame.onload = gameStart;\n\n_main.Hack.on('load', _maps.default);\n\n_main.Hack.start();","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/3/maps.js","type":"application/javascript","lastModified":1538873336682,"composed":"export default function createMap() {\n\t// map1 というマップを作る\n\tconst mapName = 'map1';\n\n\t// 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\tconst map = new RPGMap(32, 32, 15, 10);\n\n\tmap.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\n\tconst ___ = -1;\n\n\t// マップの地形をつくる\n\tmap.bmap.loadData(\n\t\t[\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323\n\t\t\t],\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323\n\t\t\t],\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323\n\t\t\t],\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323\n\t\t\t],\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323\n\t\t\t],\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323\n\t\t\t],\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323\n\t\t\t],\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323\n\t\t\t],\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323\n\t\t\t],\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t340,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t401,\n\t\t\t\t401,\n\t\t\t\t___,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t320\n\t\t\t],\n\t\t\t[\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t401,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t320\n\t\t\t],\n\t\t\t[\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t320\n\t\t\t],\n\t\t\t[\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t320,\n\t\t\t\t340,\n\t\t\t\t___,\n\t\t\t\t340,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t320\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t340,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t___,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t320\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t320\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t320\n\t\t\t],\n\t\t\t[\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t___,\n\t\t\t\t320\n\t\t\t],\n\t\t\t[\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t320\n\t\t\t],\n\t\t\t[\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320\n\t\t\t]\n\t\t]\n\t);\n\n\t// マップの歩ける場所を決める\n\t// 1 なら歩けないし、 0 なら歩ける\n\tmap.cmap = [\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1],\n\t\t[1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1],\n\t\t[1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1],\n\t\t[1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1],\n\t\t[0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1],\n\t\t[0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1],\n\t\t[1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1],\n\t\t[1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n\t\t[1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1]\n\t];\n\n\tHack.maps[mapName] = map;\n}\n","_transpileCache":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createMap;\n\nfunction createMap() {\n  // map1 というマップを作る\n  var mapName = 'map1'; // 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\n  var map = new RPGMap(32, 32, 15, 10);\n  map.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\n  var ___ = -1; // マップの地形をつくる\n\n\n  map.bmap.loadDataマップの歩ける場所を決める\n  // 1 なら歩けないし、 0 なら歩ける\n\n  map.cmap = [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1]];\n  Hack.maps[mapName] = map;\n}","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/4/README.md","type":"text/markdown","lastModified":1526963763933,"composed":"# 地下 3階　*迷宮(1)*\n\nすすめそうな 道が いくつもある\n\nしかし 右の かいだん は モンスターが、\n\n下の かいだん は かべ が ふさいでいる……\n\n**のこされた道 は 一つしかないようだ**\n\n\n\n\n\n\n\n\n\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"stages/4/README2.md","type":"text/markdown","lastModified":1526963763933,"composed":"# 地下 3階上　*閉じられた群青の輝き*\n\n\n群青 (ぐんじょう) の 精霊石 (せいれいせき) サファイヤ は\n\nスライムぐんだん の テッペキのフジン によって まもられていた！\n\n- - -\n\n## *CODE に 選ばれし 者よ...*\n\n## *汝に **汝自身 を 書きかえる 権限** を 与えん*\n\n## *人に CODE を 向けることは 禁忌 とされる……*\n\n## *しかし、良心 と 好奇心、その両方を あわせ持てば*\n\n## *必ずや 世界から 祝福を 受ける だろう...*\n\n\n\n\n\n\n\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"stages/4/code.js","type":"application/javascript","lastModified":1535170467882,"composed":"// どうやら あなたの こうげき力 を 書きかえることが  \n// できるようになった みたいです\n\n\nプレイヤー.atk = 1\n\n\n// さっそく 書きかえてみましょう！\n","_transpileCache":"\"use strict\";\n\n// どうやら あなたの こうげき力 を 書きかえることが  \n// できるようになった みたいです\nプレイヤー.atk = 1; // さっそく 書きかえてみましょう！","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/4/index.html","type":"text/html","lastModified":1526963763936,"composed":"<!DOCTYPE html>\n\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>4 閉じられた群青の輝き</title>\n\t\t<link rel=\"stylesheet\" href=\"style.css\">\n\t\t<script src=\"lib/polyfill.js\"></script>\n\t\t<script src=\"lib/interrupt.js\"></script>\n\t\t<script src=\"stages/4/main.js\"></script>\n\t</head>\n\t<body>\n\t</body>\n</html>","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"stages/4/main.js","type":"application/javascript","lastModified":1547038235531,"composed":"import { enchant, Hack, register } from 'http://localhost:8080/main.js'\nimport main2 from './main2'\nimport extra from '../extra'\nimport { createMap1, createMap2 } from './maps'\nimport { prepareUtils } from '../../utils'\n\nregister(window)\nprepareUtils()\n\nfunction gameStart() {\n\tgame.dispatchEvent(new enchant.Event('awake'))\n\n\t// map1 を読み込む\n\tHack.changeMap('map1')\n\n\t// コードをとじる\n\tfeeles.closeCode()\n\n\t// 解説の youtube を開く\n\t// const youtube = new RPGObject();\n\t// youtube.mod(Hack.assets.village);\n\t// youtube.locate(0, 4);\n\t// youtube.on('addtrodden', event => {\n\t// \tif (event.item === Hack.player) {\n\t// \t\tfeeles.openMedia({\n\t// \t\t\turl: 'https://youtu.be/laR6MY6IiJQ',\n\t// \t\t\tplaying: true,\n\t// \t\t\tcontrols: true,\n\t// \t\t\tvolume: 0.2\n\t// \t\t});\n\t// \t}\n\t// });\n\n\t// 説明書を開く\n\t// feeles.openReadme('stages/4/README.md');\n\n\t// プレイヤー（騎士）\n\tconst player = (Hack.player = new Player(('▼ スキン', _kきし)))\n\tplayer.mod(('▼ スキン', _kきし))\n\t// プレイヤーを　3, 5 の位置に移動する\n\tplayer.locate(3, 5)\n\t// プレイヤーの体力\n\tplayer.hp = 3\n\t// プレイヤーの攻撃力\n\tplayer.atk = 1\n\t// プレイヤーがやられたら...\n\tplayer.onたおれたとき = function() {\n\t\t// プレイヤーを削除\n\t\tthis.destroy()\n\t\t// ゲームオーバー\n\t\tHack.gameover()\n\t}\n\n\t// 魔道書にプレイヤーを登録する\n\tfeeles.setAlias('プレイヤー', player)\n\n\t// ATK Label\n\t// 攻撃力を画面に表示する\n\tvar atkLabel = new ScoreLabel()\n\t// 攻撃力を表示するときの名称\n\tatkLabel.label = 'ATK:'\n\t// 攻撃力を表示する位置\n\tatkLabel.moveTo(Hack.menuGroup.x + 10, Hack.menuGroup.y + 104)\n\tatkLabel.onenterframe = () => {\n\t\tatkLabel.score = Hack.player.atk\n\t}\n\tHack.menuGroup.addChild(atkLabel)\n\n\t// コウモリ\n\tconst item1 = new RPGObject()\n\titem1.mod(('▼ スキン', _kこうもり))\n\t// コウモリを 11, 5 の位置に移動する ( map1 )\n\titem1.locate(11, 5, 'map1')\n\t//　コウモリを更新する...\n\titem1.onつねに = () => {\n\t\t// コウモリの縦の位置をプレイヤーと同じにする\n\t\titem1.y = Hack.player.y\n\t\titem1.updateCollider()\n\t}\n\titem1.onattacked = () => {\n\t\tHack.logFunc('こうげきは かわされた\\nけんは あたらないようだ', true)\n\t}\n\n\t// 魔道書にコウモリを登録する\n\tfeeles.setAlias('コウモリ', item1)\n\n\t// かいだん\n\tconst item2 = new RPGObject()\n\titem2.mod(('▼ スキン', _kくだりかいだん))\n\t// 階段を 7, 1 の位置に移動する ( map1 )\n\titem2.locate(7, 1, 'map1')\n\t// 階段を下の方に置く ( Under )\n\titem2.layer = RPGMap.Layer.Under\n\t// 階段にプレイヤーが乗ったら...\n\titem2.onふまれた = event => {\n\t\tif (event.item === Hack.player) {\n\t\t\t// 説明書 2 を表示する\n\t\t\t// feeles.openReadme('stages/4/README2.md');\n\t\t\t// 魔道書を開く\n\t\t\tfeeles.openCode('stages/4/code.js')\n\t\t\t// マップ map2 に移動する\n\t\t\tHack.changeMap('map2')\n\t\t\t// プレイヤーを 7, 7 の位置に移動する ( map2 )\n\t\t\tHack.player.locate(7, 7, 'map2')\n\t\t}\n\t}\n\n\t// このステージを改造\n\textra(0, 5, 'map1', 'stages/4/main.js')\n}\n\ngame.onload = gameStart\ngame.on('load', main2)\nHack.on('load', createMap1)\nHack.on('load', createMap2)\nHack.start()\n","_transpileCache":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _main = require(\"http://localhost:8080/main.js\");\n\nvar _main2 = _interopRequireDefault(require(\"./main2\"));\n\nvar _extra = _interopRequireDefault(require(\"../extra\"));\n\nvar _maps = require(\"./maps\");\n\nvar _utils = require(\"../../utils\");\n\n(0, _main.register)(window);\n(0, _utils.prepareUtils)();\n\nfunction gameStart() {\n  game.dispatchEvent(new _main.enchant.Event('awake')); // map1 を読み込む\n\n  _main.Hack.changeMap('map1'); // コードをとじる\n\n\n  feeles.closeCode(); // 解説の youtube を開く\n  // const youtube = new RPGObject();\n  // youtube.mod(Hack.assets.village);\n  // youtube.locate(0, 4);\n  // youtube.on('addtrodden', event => {\n  // \tif (event.item === Hack.player) {\n  // \t\tfeeles.openMedia({\n  // \t\t\turl: 'https://youtu.be/laR6MY6IiJQ',\n  // \t\t\tplaying: true,\n  // \t\t\tcontrols: true,\n  // \t\t\tvolume: 0.2\n  // \t\t});\n  // \t}\n  // });\n  // 説明書を開く\n  // feeles.openReadme('stages/4/README.md');\n  // プレイヤー（騎士）\n\n  var player = _main.Hack.player = new Player(('▼ スキン', _kきし));\n  player.mod(('▼ スキン', _kきし)); // プレイヤーを　3, 5 の位置に移動する\n\n  player.locate(3, 5); // プレイヤーの体力\n\n  player.hp = 3; // プレイヤーの攻撃力\n\n  player.atk = 1; // プレイヤーがやられたら...\n\n  player.onたおれたとき = function () {\n    // プレイヤーを削除\n    this.destroy(); // ゲームオーバー\n\n    _main.Hack.gameover();\n  }; // 魔道書にプレイヤーを登録する\n\n\n  feeles.setAlias('プレイヤー', player); // ATK Label\n  // 攻撃力を画面に表示する\n\n  var atkLabel = new ScoreLabel(); // 攻撃力を表示するときの名称\n\n  atkLabel.label = 'ATK:'; // 攻撃力を表示する位置\n\n  atkLabel.moveTo(_main.Hack.menuGroup.x + 10, _main.Hack.menuGroup.y + 104);\n\n  atkLabel.onenterframe = function () {\n    atkLabel.score = _main.Hack.player.atk;\n  };\n\n  _main.Hack.menuGroup.addChild(atkLabel); // コウモリ\n\n\n  var item1 = new RPGObject();\n  item1.mod(('▼ スキン', _kこうもり)); // コウモリを 11, 5 の位置に移動する ( map1 )\n\n  item1.locate(11, 5, 'map1'); //　コウモリを更新する...\n\n  item1.onつねに = function () {\n    // コウモリの縦の位置をプレイヤーと同じにする\n    item1.y = _main.Hack.player.y;\n    item1.updateCollider();\n  };\n\n  item1.onattacked = function () {\n    _main.Hack.logFunc('こうげきは かわされた\\nけんは あたらないようだ', true);\n  }; // 魔道書にコウモリを登録する\n\n\n  feeles.setAlias('コウモリ', item1); // かいだん\n\n  var item2 = new RPGObject();\n  item2.mod(('▼ スキン', _kくだりかいだん)); // 階段を 7, 1 の位置に移動する ( map1 )\n\n  item2.locate(7, 1, 'map1'); // 階段を下の方に置く ( Under )\n\n  item2.layer = RPGMap.Layer.Under; // 階段にプレイヤーが乗ったら...\n\n  item2.onふまれた = function (event) {\n    if (event.item === _main.Hack.player) {\n      // 説明書 2 を表示する\n      // feeles.openReadme('stages/4/README2.md');\n      // 魔道書を開く\n      feeles.openCode('stages/4/code.js'); // マップ map2 に移動する\n\n      _main.Hack.changeMap('map2'); // プレイヤーを 7, 7 の位置に移動する ( map2 )\n\n\n      _main.Hack.player.locate(7, 7, 'map2');\n    }\n  }; // このステージを改造\n\n\n  (0, _extra.default)(0, 5, 'map1', 'stages/4/main.js');\n}\n\ngame.onload = gameStart;\ngame.on('load', _main2.default);\n\n_main.Hack.on('load', _maps.createMap1);\n\n_main.Hack.on('load', _maps.createMap2);\n\n_main.Hack.start();","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/4/main2.js","type":"application/javascript","lastModified":1547038235532,"composed":"import { gameclear } from '../../utils'\nimport extra from '../extra'\n\nexport default function gameStartLazy() {\n\t// サファイア\n\tconst item1 = new RPGObject()\n\titem1.mod(('▼ スキン', _sサファイア))\n\t// サファイアを 13, 2 の位置に移動する ( map2 )\n\titem1.locate(13, 2, 'map2')\n\t// サファイアにプレイヤーが乗ったら...\n\titem1.onふまれた = event => {\n\t\tif (event.item === Hack.player) {\n\t\t\t// サファイアを削除する\n\t\t\titem1.destroy()\n\t\t\t// スコアを　１００ アップ！\n\t\t\tHack.score += 100\n\t\t\tHack.logFunc(`\nサファイアを 手に入れた！\nさっきのへやに もどろう`)\n\t\t}\n\t}\n\n\t// 魔道書にサファイアを登録\n\tfeeles.setAlias('サファイア', item1)\n\n\t// かいだん\n\tconst item2 = new RPGObject()\n\titem2.mod(('▼ スキン', _nのぼりかいだん))\n\t// 階段を 7, 8 の位置に移動する ( map2 )\n\titem2.locate(7, 8, 'map2')\n\t// 階段は下の方に置く ( Under )\n\titem2.layer = RPGMap.Layer.Under\n\t// 階段にプレイヤーが乗ったら...\n\titem2.onふまれた = event => {\n\t\tif (event.item === Hack.player) {\n\t\t\t// マップ map1 に移動する\n\t\t\tHack.changeMap('map1')\n\t\t\t// プレイヤーを 7, 2 の位置に移動する ( map1 )\n\t\t\tHack.player.locate(7, 2, 'map1')\n\t\t\t// もしスコアが 100 以上なら...\n\t\t\tif (Hack.score >= 100) {\n\t\t\t\t// 次のステージに！\n\t\t\t\tgameclear('stages/5/index.html')\n\t\t\t}\n\t\t}\n\t}\n\n\t// スライム軍団をつくる\n\n\tconst logもっと = next =>\n\t\tHack.player.atk < 100\n\t\t\t? `\nもっと こうげきりょくが ひつようだ\n\nこうげきりょく（atk）：${Hack.player.atk}`\n\t\t\t: next()\n\t// 0 ならスライムは出ないけど、\n\t// 1 ならスライムが出る！\n\t// ためしに数値を書き換えてみよう！\n\tlet count = 0\n\t;[\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n\t].forEach((array, y) => {\n\t\tarray.forEach((flag, x) => {\n\t\t\tif (!flag) return\n\n\t\t\t// スライム\n\t\t\tconst item3 = new RPGObject()\n\t\t\titem3.mod(('▼ スキン', _sスライム))\n\t\t\t// スライムの体力\n\t\t\titem3.hp = 999\n\t\t\t// スライムを　x, y の位置に配置する ( map2 )\n\t\t\titem3.locate(x, y, 'map2')\n\t\t\t// スライムが倒されたら...\n\t\t\titem3.onたおれたとき = function() {\n\t\t\t\t// スコアアップ！\n\t\t\t\tHack.score++\n\t\t\t}\n\t\t\titem3.on('attacked', function needAtk() {\n\t\t\t\tHack.logFunc(logもっと)\n\t\t\t})\n\n\t\t\t// 魔道書にスライムを登録する\n\t\t\tfeeles.setAlias([`スライム${++count}`], item3)\n\t\t})\n\t})\n\n\t// このステージを改造\n\textra(9, 9, 'map2', 'stages/4/main2.js')\n}\n","_transpileCache":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gameStartLazy;\n\nvar _utils = require(\"../../utils\");\n\nvar _extra = _interopRequireDefault(require(\"../extra\"));\n\nfunction gameStartLazy() {\n  // サファイア\n  var item1 = new RPGObject();\n  item1.mod(('▼ スキン', _sサファイア)); // サファイアを 13, 2 の位置に移動する ( map2 )\n\n  item1.locate(13, 2, 'map2'); // サファイアにプレイヤーが乗ったら...\n\n  item1.onふまれた = function (event) {\n    if (event.item === Hack.player) {\n      // サファイアを削除する\n      item1.destroy(); // スコアを　１００ アップ！\n\n      Hack.score += 100;\n      Hack.logFunc(\"\\n\\u30B5\\u30D5\\u30A1\\u30A4\\u30A2\\u3092 \\u624B\\u306B\\u5165\\u308C\\u305F\\uFF01\\n\\u3055\\u3063\\u304D\\u306E\\u3078\\u3084\\u306B \\u3082\\u3069\\u308D\\u3046\");\n    }\n  }; // 魔道書にサファイアを登録\n\n\n  feeles.setAlias('サファイア', item1); // かいだん\n\n  var item2 = new RPGObject();\n  item2.mod(('▼ スキン', _nのぼりかいだん)); // 階段を 7, 8 の位置に移動する ( map2 )\n\n  item2.locate(7, 8, 'map2'); // 階段は下の方に置く ( Under )\n\n  item2.layer = RPGMap.Layer.Under; // 階段にプレイヤーが乗ったら...\n\n  item2.onふまれた = function (event) {\n    if (event.item === Hack.player) {\n      // マップ map1 に移動する\n      Hack.changeMap('map1'); // プレイヤーを 7, 2 の位置に移動する ( map1 )\n\n      Hack.player.locate(7, 2, 'map1'); // もしスコアが 100 以上なら...\n\n      if (Hack.score >= 100) {\n        // 次のステージに！\n        (0, _utils.gameclear)('stages/5/index.html');\n      }\n    }\n  }; // スライム軍団をつくる\n\n\n  var logもっと = function logもっと(next) {\n    return Hack.player.atk < 100 ? \"\\n\\u3082\\u3063\\u3068 \\u3053\\u3046\\u3052\\u304D\\u308A\\u3087\\u304F\\u304C \\u3072\\u3064\\u3088\\u3046\\u3060\\n\\n\\u3053\\u3046\\u3052\\u304D\\u308A\\u3087\\u304F\\uFF08atk\\uFF09\\uFF1A\".concat(Hack.player.atk) : next();\n  }; // 0 ならスライムは出ないけど、\n  // 1 ならスライムが出る！\n  // ためしに数値を書き換えてみよう！\n\n\n  var count = 0;\n  [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]].forEach(function (array, y) {\n    array.forEach(function (flag, x) {\n      if (!flag) return; // スライム\n\n      var item3 = new RPGObject();\n      item3.mod(('▼ スキン', _sスライム)); // スライムの体力\n\n      item3.hp = 999; // スライムを　x, y の位置に配置する ( map2 )\n\n      item3.locate(x, y, 'map2'); // スライムが倒されたら...\n\n      item3.onたおれたとき = function () {\n        // スコアアップ！\n        Hack.score++;\n      };\n\n      item3.on('attacked', function needAtk() {\n        Hack.logFunc(logもっと);\n      }); // 魔道書にスライムを登録する\n\n      feeles.setAlias([\"\\u30B9\\u30E9\\u30A4\\u30E0\".concat(++count)], item3);\n    });\n  }); // このステージを改造\n\n  (0, _extra.default)(9, 9, 'map2', 'stages/4/main2.js');\n}","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/4/maps.js","type":"application/javascript","lastModified":1538873336683,"composed":"export function createMap1() {\n\t// map1 というマップを作る\n\tconst mapName = 'map1';\n\n\t// 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\tconst map = new RPGMap(32, 32, 15, 10);\n\n\tmap.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\n\tconst ___ = -1;\n\n\t// マップの地形をつくる\n\tmap.bmap.loadData(\n\t\t[\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t341,\n\t\t\t\t341\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t402\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321,\n\t\t\t\t341,\n\t\t\t\t321,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321,\n\t\t\t\t402,\n\t\t\t\t321,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t341,\n\t\t\t\t341\n\t\t\t]\n\t\t]\n\t);\n\n\t// マップの歩ける場所を決める\n\t// 1 なら歩けないし、 0 なら歩ける\n\tmap.cmap = [\n\t\t[1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1],\n\t\t[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n\t\t[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n\t\t[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1],\n\t\t[1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1]\n\t];\n\n\tHack.maps[mapName] = map;\n}\n\nexport function createMap2() {\n\t// map2 というマップを作る\n\tconst mapName = 'map2';\n\n\t// 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\tconst map = new RPGMap(32, 32, 15, 10);\n\n\tmap.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\n\tconst ___ = -1;\n\n\t// マップの地形をつくる\n\tmap.bmap.loadData(\n\t\t[\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323\n\t\t\t],\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323\n\t\t\t],\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323\n\t\t\t],\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323\n\t\t\t],\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323\n\t\t\t],\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323\n\t\t\t],\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323\n\t\t\t],\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323\n\t\t\t],\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323\n\t\t\t],\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t320,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320\n\t\t\t],\n\t\t\t[\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t340,\n\t\t\t\t___,\n\t\t\t\t340,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320\n\t\t\t],\n\t\t\t[\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320\n\t\t\t],\n\t\t\t[\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t340,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320\n\t\t\t],\n\t\t\t[\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340\n\t\t\t]\n\t\t]\n\t);\n\n\t// マップの歩ける場所を決める\n\t// 1 なら歩けないし、 0 なら歩ける\n\tmap.cmap = [\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],\n\t\t[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],\n\t\t[1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0],\n\t\t[1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1],\n\t\t[1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1],\n\t\t[1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],\n\t\t[1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],\n\t\t[1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]\n\t];\n\n\tHack.maps[mapName] = map;\n}\n","_transpileCache":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createMap1 = createMap1;\nexports.createMap2 = createMap2;\n\nfunction createMap1() {\n  // map1 というマップを作る\n  var mapName = 'map1'; // 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\n  var map = new RPGMap(32, 32, 15, 10);\n  map.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\n  var ___ = -1; // マップの地形をつくる\n\n\n  map.bmap.loadDataマップの歩ける場所を決める\n  // 1 なら歩けないし、 0 なら歩ける\n\n  map.cmap = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1]];\n  Hack.maps[mapName] = map;\n}\n\nfunction createMap2() {\n  // map2 というマップを作る\n  var mapName = 'map2'; // 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\n  var map = new RPGMap(32, 32, 15, 10);\n  map.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\n  var ___ = -1; // マップの地形をつくる\n\n\n  map.bmap.loadDataマップの歩ける場所を決める\n  // 1 なら歩けないし、 0 なら歩ける\n\n  map.cmap = [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1]];\n  Hack.maps[mapName] = map;\n}","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/5/README.md","type":"text/markdown","lastModified":1526963763939,"composed":"# 地下 3階　*迷宮(2)*\n\nおこった スライムぐんだん が なかま を つれて フクシュウ しに来た！!\n\nまっか に ジュウケツ して 見るからに おこっている……\n\nカンペキな スライムたいれつ を くんだ やつらに タイコウ できるのは\n\nもはや CODE (コード) だけだ\n\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"stages/5/README2.md","type":"text/markdown","lastModified":1526963763939,"composed":"# 地下 3階下　*大グモ荒野*\n\n\n光彩 (こうさい) の 精霊石(せいれいせき) ダイヤモンド を まもる かいぶつは\n\nたおす ことも すりぬける ことも できない\n\n自分 `player` の いち `locate` を\n\nダイヤモンドの いち まで うごかすことが できれば、\n\n手に入れることが できるかも 知れない\n\n\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"stages/5/code1.js","type":"application/javascript","lastModified":1535170467884,"composed":"// すでに使い方はわかりましたね？\n\n\n\n\nプレイヤー.atk = 1\n\n\n\n// あなたじしんの 力を かきかえれば\n// ふさがれていた 下のへやに\n// たどりつける はずです","_transpileCache":"\"use strict\";\n\n// すでに使い方はわかりましたね？\nプレイヤー.atk = 1; // あなたじしんの 力を かきかえれば\n// ふさがれていた 下のへやに\n// たどりつける はずです","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/5/code2.js","type":"application/javascript","lastModified":1543483142326,"composed":"// クモがじゃまで ダイヤモンドを ひろえない？\n// そんなときは 【ワープ】 しよう！\n\nプレイヤー.locate(7, 2)\n\n// (7, 2) という すうじは\n// あるばしょを あらわしている\n\n// 「コードをおくる」を おすと ワープ するよ！\n","_transpileCache":"\"use strict\";\n\n// クモがじゃまで ダイヤモンドを ひろえない？\n// そんなときは 【ワープ】 しよう！\nプレイヤー.locate(7, 2); // (7, 2) という すうじは\n// あるばしょを あらわしている\n// 「コードをおくる」を おすと ワープ するよ！","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/5/index.html","type":"text/html","lastModified":1526963763942,"composed":"<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>5 大グモ荒野</title>\n\t\t<link rel=\"stylesheet\" href=\"style.css\">\n\t\t<script src=\"lib/polyfill.js\"></script>\n\t\t<script src=\"lib/interrupt.js\"></script>\n\t\t<script src=\"stages/5/main.js\"></script>\n\t</head>\n\t<body>\n\t</body>\n</html>","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"stages/5/main.js","type":"application/javascript","lastModified":1547038235533,"composed":"import { enchant, Hack, register } from 'http://localhost:8080/main.js'\nimport main2 from './main2'\nimport extra from '../extra'\nimport { createMap1, createMap2 } from './maps'\nimport { prepareUtils } from '../../utils'\n\nregister(window)\nprepareUtils()\n\nfunction gameStart() {\n\tgame.dispatchEvent(new enchant.Event('awake'))\n\n\t// map1 を読み込む\n\tHack.changeMap('map1')\n\n\t// 魔道書を開く\n\tfeeles.openCode('stages/5/code1.js')\n\n\t// 解説の youtube を開く\n\t// const youtube = new RPGObject();\n\t// youtube.mod(Hack.assets.village);\n\t// youtube.locate(0, 4);\n\t// youtube.on('addtrodden', event => {\n\t// \tif (event.item === Hack.player) {\n\t// \t\tfeeles.openMedia({\n\t// \t\t\turl: 'https://youtu.be/sHlxu5U94U0',\n\t// \t\t\tplaying: true,\n\t// \t\t\tcontrols: true,\n\t// \t\t\tvolume: 0.2\n\t// \t\t});\n\t// \t}\n\t// });\n\n\t// 説明書を開く\n\t// feeles.openReadme('stages/5/README.md');\n\n\t// プレイヤー（騎士）\n\tconst player = (Hack.player = new Player(('▼ スキン', _kきし)))\n\tplayer.mod(('▼ スキン', _kきし))\n\t// プレイヤーを　7, 2 の位置に移動する\n\tplayer.locate(7, 2)\n\t// プレイヤーの体力\n\tplayer.hp = 3\n\t// プレイヤーの攻撃力\n\tplayer.atk = 1\n\t// プレイヤーがやられたら...\n\tplayer.onたおれたとき = function() {\n\t\t// プレイヤーを削除\n\t\tthis.destroy()\n\t\t// ゲームオーバー\n\t\tHack.gameover()\n\t}\n\n\t// 魔道書にプレイヤーを登録する\n\tfeeles.setAlias('プレイヤー', player)\n\n\t// ATK Label\n\t// 攻撃力を画面に表示する\n\tvar atkLabel = new ScoreLabel()\n\t// 攻撃力を表示するときの名称\n\tatkLabel.label = 'ATK:'\n\t// 攻撃力を表示する位置\n\tatkLabel.moveTo(Hack.menuGroup.x + 10, Hack.menuGroup.y + 104)\n\tatkLabel.onenterframe = () => {\n\t\tatkLabel.score = Hack.player.atk\n\t}\n\tHack.menuGroup.addChild(atkLabel)\n\n\t// コウモリ\n\tconst item4 = new RPGObject()\n\titem4.mod(('▼ スキン', _kこうもり))\n\t// コウモリを 11, 5 の位置に移動する ( map1 )\n\titem4.locate(11, 5, 'map1')\n\t//　コウモリを更新する...\n\titem4.onつねに = () => {\n\t\t// コウモリの縦の位置をプレイヤーと同じにする\n\t\titem4.y = Hack.player.y\n\t\titem4.updateCollider()\n\t}\n\titem4.onattacked = () => {\n\t\tHack.logFunc('こうげきは かわされた\\nけんは あたらないようだ', true)\n\t}\n\n\t// 魔道書にコウモリを登録する\n\tfeeles.setAlias('コウモリ', item4)\n\n\t// かいだん\n\tconst item2 = new RPGObject()\n\titem2.mod(('▼ スキン', _nのぼりかいだん))\n\t// 階段を 7, 8 の位置に移動する ( map1 )\n\titem2.locate(7, 8, 'map1')\n\t// 階段を下の方に置く ( Under )\n\titem2.layer = RPGMap.Layer.Under\n\t// 階段にプレイヤーが乗ったら...\n\titem2.onふまれた = event => {\n\t\tif (event.item === Hack.player) {\n\t\t\t// 説明書 2 を開く\n\t\t\t// feeles.openReadme('stages/5/README2.md');\n\t\t\t// 魔道書の 2 ページ目をを開く\n\t\t\tfeeles.openCode('stages/5/code2.js')\n\t\t\t// マップ map2 に移動する\n\t\t\tHack.changeMap('map2')\n\t\t\t// プレイヤーを 7, 1 の位置に配置する ( map2 )\n\t\t\tHack.player.locate(7, 1, 'map2')\n\t\t}\n\t}\n\n\t// 赤スライム軍団\n\n\t// 0 ならスライムは出ないけど、\n\t// 1 ならスライムが出る！\n\t// ためしに数値を書き換えてみよう！\n\tlet count = 0\n\t;[\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]\n\t].forEach((array, y) => {\n\t\tarray.forEach((flag, x) => {\n\t\t\tif (!flag) return\n\n\t\t\t// スライム\n\t\t\tconst item3 = new RPGObject()\n\t\t\titem3.mod(('▼ スキン', _sスライム))\n\t\t\t// スライムの体力\n\t\t\titem3.hp = 999\n\t\t\t// スライムの色を red (赤色) にする\n\t\t\titem3.color = 'red'\n\t\t\t// スライムを　x, y の位置に配置する ( map1 )\n\t\t\titem3.locate(x, y, 'map1')\n\t\t\t// スライムが倒されたら...\n\t\t\titem3.onたおれたとき = () => {\n\t\t\t\t// スコアアップ！\n\t\t\t\tHack.score++\n\t\t\t}\n\n\t\t\t// 魔道書にスライムを登録する\n\t\t\tfeeles.setAlias([`スライム${++count}`], item3)\n\t\t})\n\t})\n\n\t// このステージを改造\n\textra(0, 5, 'map1', 'stages/5/main.js')\n}\n\ngame.onload = gameStart\ngame.on('load', main2)\nHack.on('load', createMap1)\nHack.on('load', createMap2)\nHack.start()\n","_transpileCache":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _main = require(\"http://localhost:8080/main.js\");\n\nvar _main2 = _interopRequireDefault(require(\"./main2\"));\n\nvar _extra = _interopRequireDefault(require(\"../extra\"));\n\nvar _maps = require(\"./maps\");\n\nvar _utils = require(\"../../utils\");\n\n(0, _main.register)(window);\n(0, _utils.prepareUtils)();\n\nfunction gameStart() {\n  game.dispatchEvent(new _main.enchant.Event('awake')); // map1 を読み込む\n\n  _main.Hack.changeMap('map1'); // 魔道書を開く\n\n\n  feeles.openCode('stages/5/code1.js'); // 解説の youtube を開く\n  // const youtube = new RPGObject();\n  // youtube.mod(Hack.assets.village);\n  // youtube.locate(0, 4);\n  // youtube.on('addtrodden', event => {\n  // \tif (event.item === Hack.player) {\n  // \t\tfeeles.openMedia({\n  // \t\t\turl: 'https://youtu.be/sHlxu5U94U0',\n  // \t\t\tplaying: true,\n  // \t\t\tcontrols: true,\n  // \t\t\tvolume: 0.2\n  // \t\t});\n  // \t}\n  // });\n  // 説明書を開く\n  // feeles.openReadme('stages/5/README.md');\n  // プレイヤー（騎士）\n\n  var player = _main.Hack.player = new Player(('▼ スキン', _kきし));\n  player.mod(('▼ スキン', _kきし)); // プレイヤーを　7, 2 の位置に移動する\n\n  player.locate(7, 2); // プレイヤーの体力\n\n  player.hp = 3; // プレイヤーの攻撃力\n\n  player.atk = 1; // プレイヤーがやられたら...\n\n  player.onたおれたとき = function () {\n    // プレイヤーを削除\n    this.destroy(); // ゲームオーバー\n\n    _main.Hack.gameover();\n  }; // 魔道書にプレイヤーを登録する\n\n\n  feeles.setAlias('プレイヤー', player); // ATK Label\n  // 攻撃力を画面に表示する\n\n  var atkLabel = new ScoreLabel(); // 攻撃力を表示するときの名称\n\n  atkLabel.label = 'ATK:'; // 攻撃力を表示する位置\n\n  atkLabel.moveTo(_main.Hack.menuGroup.x + 10, _main.Hack.menuGroup.y + 104);\n\n  atkLabel.onenterframe = function () {\n    atkLabel.score = _main.Hack.player.atk;\n  };\n\n  _main.Hack.menuGroup.addChild(atkLabel); // コウモリ\n\n\n  var item4 = new RPGObject();\n  item4.mod(('▼ スキン', _kこうもり)); // コウモリを 11, 5 の位置に移動する ( map1 )\n\n  item4.locate(11, 5, 'map1'); //　コウモリを更新する...\n\n  item4.onつねに = function () {\n    // コウモリの縦の位置をプレイヤーと同じにする\n    item4.y = _main.Hack.player.y;\n    item4.updateCollider();\n  };\n\n  item4.onattacked = function () {\n    _main.Hack.logFunc('こうげきは かわされた\\nけんは あたらないようだ', true);\n  }; // 魔道書にコウモリを登録する\n\n\n  feeles.setAlias('コウモリ', item4); // かいだん\n\n  var item2 = new RPGObject();\n  item2.mod(('▼ スキン', _nのぼりかいだん)); // 階段を 7, 8 の位置に移動する ( map1 )\n\n  item2.locate(7, 8, 'map1'); // 階段を下の方に置く ( Under )\n\n  item2.layer = RPGMap.Layer.Under; // 階段にプレイヤーが乗ったら...\n\n  item2.onふまれた = function (event) {\n    if (event.item === _main.Hack.player) {\n      // 説明書 2 を開く\n      // feeles.openReadme('stages/5/README2.md');\n      // 魔道書の 2 ページ目をを開く\n      feeles.openCode('stages/5/code2.js'); // マップ map2 に移動する\n\n      _main.Hack.changeMap('map2'); // プレイヤーを 7, 1 の位置に配置する ( map2 )\n\n\n      _main.Hack.player.locate(7, 1, 'map2');\n    }\n  }; // 赤スライム軍団\n  // 0 ならスライムは出ないけど、\n  // 1 ならスライムが出る！\n  // ためしに数値を書き換えてみよう！\n\n\n  var count = 0;\n  [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]].forEach(function (array, y) {\n    array.forEach(function (flag, x) {\n      if (!flag) return; // スライム\n\n      var item3 = new RPGObject();\n      item3.mod(('▼ スキン', _sスライム)); // スライムの体力\n\n      item3.hp = 999; // スライムの色を red (赤色) にする\n\n      item3.color = 'red'; // スライムを　x, y の位置に配置する ( map1 )\n\n      item3.locate(x, y, 'map1'); // スライムが倒されたら...\n\n      item3.onたおれたとき = function () {\n        // スコアアップ！\n        _main.Hack.score++;\n      }; // 魔道書にスライムを登録する\n\n\n      feeles.setAlias([\"\\u30B9\\u30E9\\u30A4\\u30E0\".concat(++count)], item3);\n    });\n  }); // このステージを改造\n\n  (0, _extra.default)(0, 5, 'map1', 'stages/5/main.js');\n}\n\ngame.onload = gameStart;\ngame.on('load', _main2.default);\n\n_main.Hack.on('load', _maps.createMap1);\n\n_main.Hack.on('load', _maps.createMap2);\n\n_main.Hack.start();","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/5/main2.js","type":"application/javascript","lastModified":1547038235534,"composed":"import { gameclear } from '../../utils'\nimport extra from '../extra'\n\nexport default function gameStartLazy() {\n\tHack.maps['map2'].onload = () => {\n\t\tsetTimeout(() => {\n\t\t\tHack.logFunc(`\nダイヤモンドを みつけた！\nしかし クモが じゃまである`)\n\t\t}, 2000)\n\t\tconst hint = next =>\n\t\t\tHack.score < 100 && Hack.player.mapY < 4\n\t\t\t\t? `\n【ヒント】\nあなたのいる ばしょ (${Hack.player.mapX}, ${Hack.player.mapY})\nダイヤモンド ばしょ (${item2.mapX}, ${item2.mapY})`\n\t\t\t\t: next()\n\t\tsetInterval(() => {\n\t\t\tHack.logFunc(hint)\n\t\t}, 15000)\n\t\tHack.maps['map2'].onload = null\n\t}\n\n\t// クモ\n\tconst item1 = new RPGObject()\n\titem1.mod(('▼ スキン', _kくも))\n\t// クモを 7, 4 の位置に移動する ( map2 )\n\titem1.locate(7, 4, 'map2')\n\t// クモを更新する...\n\titem1.onつねに = () => {\n\t\t// クモの横の位置をプレイヤーと同じにする\n\t\titem1.x = Hack.player.x\n\t\titem1.updateCollider()\n\t}\n\titem1.onattacked = () => {\n\t\tHack.logFunc('こうげきは かわされた\\nけんは あたらないようだ', true)\n\t}\n\n\t// 魔道書にクモを登録する\n\tfeeles.setAlias('spider', item1)\n\n\t// ダイアモンド\n\tconst item2 = new RPGObject()\n\titem2.mod(('▼ スキン', _dダイヤモンド))\n\t// ダイアモンドを 4, 7 の位置に移動する ( map2 )\n\titem2.locate(4, 7, 'map2')\n\t// ダイアモンドにプレイヤーが乗ったら...\n\titem2.onふまれた = event => {\n\t\tif (event.item === Hack.player) {\n\t\t\t// ダイアモンドを削除する\n\t\t\titem2.destroy()\n\t\t\t// スコアを 100 アップ！\n\t\t\tHack.score += 100\n\t\t\tHack.logFunc(`\nダイヤモンドを 手に入れた！\nさっきのへやに もどろう`)\n\t\t}\n\t}\n\n\t// 魔道書にクモを登録する\n\tfeeles.setAlias('diamond', item2)\n\n\t// かいだん\n\tconst item3 = new RPGObject()\n\titem3.mod(('▼ スキン', _kくだりかいだん))\n\t// 階段を 7, 0 の位置に移動する ( map2 )\n\titem3.locate(7, 0, 'map2')\n\t//　階段を下の方に置く ( Under )\n\titem3.layer = RPGMap.Layer.Under\n\t// 階段にプレイヤーが乗ったら\n\titem3.onふまれた = event => {\n\t\tif (event.item === Hack.player) {\n\t\t\t// マップ map1 に移動\n\t\t\tHack.changeMap('map1')\n\t\t\t// プレイヤーを 7, 8 の位置に移動する ( map1 )\n\t\t\tHack.player.locate(7, 8, 'map1')\n\t\t\t// もしスコアが 100 以上なら...\n\t\t\tif (Hack.score >= 100) {\n\t\t\t\t// 次のステージに！\n\t\t\t\tgameclear('stages/6/index.html')\n\t\t\t}\n\t\t}\n\t}\n\n\t// このステージを改造\n\textra(5, 1, 'map2', 'stages/5/main2.js')\n}\n","_transpileCache":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gameStartLazy;\n\nvar _utils = require(\"../../utils\");\n\nvar _extra = _interopRequireDefault(require(\"../extra\"));\n\nfunction gameStartLazy() {\n  Hack.maps['map2'].onload = function () {\n    setTimeout(function () {\n      Hack.logFunc(\"\\n\\u30C0\\u30A4\\u30E4\\u30E2\\u30F3\\u30C9\\u3092 \\u307F\\u3064\\u3051\\u305F\\uFF01\\n\\u3057\\u304B\\u3057 \\u30AF\\u30E2\\u304C \\u3058\\u3083\\u307E\\u3067\\u3042\\u308B\");\n    }, 2000);\n\n    var hint = function hint(next) {\n      return Hack.score < 100 && Hack.player.mapY < 4 ? \"\\n\\u3010\\u30D2\\u30F3\\u30C8\\u3011\\n\\u3042\\u306A\\u305F\\u306E\\u3044\\u308B \\u3070\\u3057\\u3087 (\".concat(Hack.player.mapX, \", \").concat(Hack.player.mapY, \")\\n\\u30C0\\u30A4\\u30E4\\u30E2\\u30F3\\u30C9 \\u3070\\u3057\\u3087 (\").concat(item2.mapX, \", \").concat(item2.mapY, \")\") : next();\n    };\n\n    setInterval(function () {\n      Hack.logFunc(hint);\n    }, 15000);\n    Hack.maps['map2'].onload = null;\n  }; // クモ\n\n\n  var item1 = new RPGObject();\n  item1.mod(('▼ スキン', _kくも)); // クモを 7, 4 の位置に移動する ( map2 )\n\n  item1.locate(7, 4, 'map2'); // クモを更新する...\n\n  item1.onつねに = function () {\n    // クモの横の位置をプレイヤーと同じにする\n    item1.x = Hack.player.x;\n    item1.updateCollider();\n  };\n\n  item1.onattacked = function () {\n    Hack.logFunc('こうげきは かわされた\\nけんは あたらないようだ', true);\n  }; // 魔道書にクモを登録する\n\n\n  feeles.setAlias('spider', item1); // ダイアモンド\n\n  var item2 = new RPGObject();\n  item2.mod(('▼ スキン', _dダイヤモンド)); // ダイアモンドを 4, 7 の位置に移動する ( map2 )\n\n  item2.locate(4, 7, 'map2'); // ダイアモンドにプレイヤーが乗ったら...\n\n  item2.onふまれた = function (event) {\n    if (event.item === Hack.player) {\n      // ダイアモンドを削除する\n      item2.destroy(); // スコアを 100 アップ！\n\n      Hack.score += 100;\n      Hack.logFunc(\"\\n\\u30C0\\u30A4\\u30E4\\u30E2\\u30F3\\u30C9\\u3092 \\u624B\\u306B\\u5165\\u308C\\u305F\\uFF01\\n\\u3055\\u3063\\u304D\\u306E\\u3078\\u3084\\u306B \\u3082\\u3069\\u308D\\u3046\");\n    }\n  }; // 魔道書にクモを登録する\n\n\n  feeles.setAlias('diamond', item2); // かいだん\n\n  var item3 = new RPGObject();\n  item3.mod(('▼ スキン', _kくだりかいだん)); // 階段を 7, 0 の位置に移動する ( map2 )\n\n  item3.locate(7, 0, 'map2'); //　階段を下の方に置く ( Under )\n\n  item3.layer = RPGMap.Layer.Under; // 階段にプレイヤーが乗ったら\n\n  item3.onふまれた = function (event) {\n    if (event.item === Hack.player) {\n      // マップ map1 に移動\n      Hack.changeMap('map1'); // プレイヤーを 7, 8 の位置に移動する ( map1 )\n\n      Hack.player.locate(7, 8, 'map1'); // もしスコアが 100 以上なら...\n\n      if (Hack.score >= 100) {\n        // 次のステージに！\n        (0, _utils.gameclear)('stages/6/index.html');\n      }\n    }\n  }; // このステージを改造\n\n\n  (0, _extra.default)(5, 1, 'map2', 'stages/5/main2.js');\n}","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/5/maps.js","type":"application/javascript","lastModified":1538873336684,"composed":"export function createMap1() {\n\t//　map1 というマップを作る\n\tconst mapName = 'map1';\n\n\t// 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\tconst map = new RPGMap(32, 32, 15, 10);\n\n\tmap.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\n\tconst ___ = -1;\n\n\t// マップの地形をつくる\n\tmap.bmap.loadData(\n\t\t[\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t422,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t341,\n\t\t\t\t341\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t402\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t341,\n\t\t\t\t341\n\t\t\t]\n\t\t]\n\t);\n\n\t// マップの歩ける場所を決める\n\t// 1 なら歩けないし、 0 なら歩ける\n\tmap.cmap = [\n\t\t[1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1],\n\t\t[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n\t\t[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n\t\t[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n\t\t[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n\t\t[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1]\n\t];\n\n\tHack.maps[mapName] = map;\n}\n\nexport function createMap2() {\n\t// map2 というマップを作る\n\tconst mapName = 'map2';\n\n\t// 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\tconst map = new RPGMap(32, 32, 15, 10);\n\n\tmap.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\n\tconst ___ = -1;\n\n\t// マップの地形をつくる\n\tmap.bmap.loadData(\n\t\t[\n\t\t\t[45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45],\n\t\t\t[45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45],\n\t\t\t[45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45],\n\t\t\t[45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45],\n\t\t\t[45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45],\n\t\t\t[45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45],\n\t\t\t[45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45],\n\t\t\t[45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45],\n\t\t\t[45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45],\n\t\t\t[45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t340,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320,\n\t\t\t\t320\n\t\t\t],\n\t\t\t[\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340,\n\t\t\t\t340\n\t\t\t]\n\t\t]\n\t);\n\n\t// マップの歩ける場所を決める\n\t// 1 なら歩けないし、 0 なら歩ける\n\tmap.cmap = [\n\t\t[1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1],\n\t\t[1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n\t];\n\n\tHack.maps[mapName] = map;\n}\n","_transpileCache":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createMap1 = createMap1;\nexports.createMap2 = createMap2;\n\nfunction createMap1() {\n  //　map1 というマップを作る\n  var mapName = 'map1'; // 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\n  var map = new RPGMap(32, 32, 15, 10);\n  map.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\n  var ___ = -1; // マップの地形をつくる\n\n\n  map.bmap.loadData([[342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342], [342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342], [342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342], [342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342], [342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342], [342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342], [342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342], [342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342], [342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342], [342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342, 342]], [[321, 321, 321, 341, 341, 341, ___, ___, ___, 341, 341, ___, ___, 321, 321], [321, 321, 321, ___, ___, ___, ___, 422, ___, ___, ___, ___, ___, 321, 321], [321, 321, 321, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, 321, 321], [341, 341, 341, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, 341, 341], [___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___], [___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, 402], [___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___], [321, 321, 321, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, 321, 321], [321, 321, 321, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, 321, 321], [341, 341, 341, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, 341, 341]]); // マップの歩ける場所を決める\n  // 1 なら歩けないし、 0 なら歩ける\n\n  map.cmap = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1]];\n  Hack.maps[mapName] = map;\n}\n\nfunction createMap2() {\n  // map2 というマップを作る\n  var mapName = 'map2'; // 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\n  var map = new RPGMap(32, 32, 15, 10);\n  map.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\n  var ___ = -1; // マップの地形をつくる\n\n\n  map.bmap.loadDataマップの歩ける場所を決める\n  // 1 なら歩けないし、 0 なら歩ける\n\n  map.cmap = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]];\n  Hack.maps[mapName] = map;\n}","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/6/README.md","type":"text/markdown","lastModified":1526963763946,"composed":"# 地下 3階　*迷宮(3)*\n\n\n今まで 右の かいだん を ふさいでいた モンスターも、\n\nこの 力で とびこえられる だろう\n\nあの かいだん の おくから 何か、\nとてつもない まがまがしさ を かんじるが……\n\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"stages/6/README2.md","type":"text/markdown","lastModified":1526963763946,"composed":"# 地下 4階　*守りし者*\n\n## 迷宮 (めいきゅう) の さいごに 待ちかまえていたのは、獄炎のドラゴンだった!!\n\n全てを やきつくす ドラゴンの炎は、\n\nふれることすら ゆるされない!!\n\n\n\n\n\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"stages/6/README3.md","type":"text/markdown","lastModified":1526963763947,"composed":"# 地下 ??階　*秘密の部屋*\n\n## おめでとう！\n\nきみは 獄炎 (ごくえん) のドラゴンを たおし、\n\nダンジョンの さいしんぶ まで たどりついたのだ！\n\nここにある ざいほうは すべて きみのものだ！\n\nCODE を 書きかえる このちから...\n\n今後も きみの たすけに なることだろう\n\nそれは きみじしんの みらいを、\n\nそして せかいを、かえるのだ！\n\n\nきみの さらなる ひやくを ねがっている\n\n\n> ー魔導書 (まどうしょ) に 書かれている 文字が  \nすこしづつ うすれてゆく...\n\n\n\n\n\n\n\n\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"stages/6/README4.md","type":"text/markdown","lastModified":1526963763948,"composed":"# *森の出口*\n\n\n\n> ー魔導書(まどうしょ) は いつのまにか  \n元の まっさらな 本に もどっていたーーー\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"stages/6/code1.js","type":"application/javascript","lastModified":1535170467888,"composed":"// (7, 6) は、  \n// 左から 7 マス目、上から 6 マス目 に  \n// いどう することを あらわしています\nプレイヤー.locate(7, 6)\n\n// もしくは、こちらのコードを使えば\n// コウモリをいどうさせられます！\nコウモリ.locate(11, 6)\n","_transpileCache":"\"use strict\";\n\n// (7, 6) は、  \n// 左から 7 マス目、上から 6 マス目 に  \n// いどう することを あらわしています\nプレイヤー.locate(7, 6); // もしくは、こちらのコードを使えば\n// コウモリをいどうさせられます！\n\nコウモリ.locate(11, 6);","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/6/code2.js","type":"application/javascript","lastModified":1535170467890,"composed":"\n\nプレイヤー.hp = 99\n\n\n// これが さいごの CODE です  \n// あなたじしん の げんかいを 書きかえ、  \n// ドラゴンに いどんで 下さい\n","_transpileCache":"\"use strict\";\n\nプレイヤー.hp = 99; // これが さいごの CODE です  \n// あなたじしん の げんかいを 書きかえ、  \n// ドラゴンに いどんで 下さい","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/6/index.html","type":"text/html","lastModified":1526963763951,"composed":"<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>6 守りし者</title>\n\t\t<link rel=\"stylesheet\" href=\"style.css\">\n\t\t<script src=\"lib/polyfill.js\"></script>\n\t\t<script src=\"lib/interrupt.js\"></script>\n\t\t<script src=\"stages/6/main.js\"></script>\n\t</head>\n\t<body>\n\t</body>\n</html>","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"stages/6/main.js","type":"application/javascript","lastModified":1547038235534,"composed":"import { enchant, Hack, register } from 'http://localhost:8080/main.js'\nimport main2 from './main2'\nimport main3 from './main3'\nimport main4 from './main4'\nimport extra from '../extra'\nimport { createMap1, createMap2, createMap3, createMap4 } from './maps'\nimport { prepareUtils } from '../../utils'\n\nregister(window)\nprepareUtils()\n\ngame.preload(\n\t'resources/hackforplay/bar_green.png',\n\t'resources/hackforplay/bar_red.png'\n)\n\nfunction gameStart() {\n\tgame.dispatchEvent(new enchant.Event('awake'))\n\n\t// map1 を読み込む\n\tHack.changeMap('map1')\n\n\t// 魔道書を開く\n\tfeeles.openCode('stages/6/code1.js')\n\n\t// 解説の youtube を開く\n\t// const youtube = new RPGObject();\n\t// youtube.mod(Hack.assets.village);\n\t// youtube.locate(0, 4);\n\t// youtube.on('addtrodden', event => {\n\t// \tif (event.item === Hack.player) {\n\t// \t\tfeeles.openMedia({\n\t// \t\t\turl: 'https://youtu.be/yfwUHmf0DYA',\n\t// \t\t\tplaying: true,\n\t// \t\t\tcontrols: true,\n\t// \t\t\tvolume: 0.2\n\t// \t\t});\n\t// \t}\n\t// });\n\n\t// 説明書を開く\n\t// feeles.openReadme('stages/6/README.md');\n\n\t// プレイヤー（騎士）\n\tconst player = (Hack.player = new Player(('▼ スキン', _kきし)))\n\tplayer.mod(('▼ スキン', _kきし))\n\t// プレイヤーを　7, 6 の位置に移動する\n\tplayer.locate(7, 6)\n\t// プレイヤーの体力\n\tplayer.hp = 3\n\t// プレイヤーの攻撃力\n\tplayer.atk = 1\n\t// プレイヤーがやられたら...\n\tplayer.onたおれたとき = function() {\n\t\t// プレイヤーを削除\n\t\tthis.destroy()\n\t\t// ゲームオーバー\n\t\tHack.gameover()\n\t}\n\n\t// 魔道書にプレイヤーを登録する\n\tfeeles.setAlias('プレイヤー', player)\n\n\t// \tHP Gage\n\t// 体力のゲージを作る\n\t// 体力は最大で 9999\n\tconst MAX = 9999\n\tconst bar = new Sprite(480, 32)\n\tbar.image = game.assets['resources/hackforplay/bar_green.png']\n\t// 体力ゲージの位置\n\tbar.moveTo(0, 300)\n\t// 体力ゲージを更新する...\n\tbar.onenterframe = () => {\n\t\t// プレイヤーの体力が、体力の最大値を超えないようにする\n\t\tHack.player.hp = Math.min(Hack.player.hp, MAX)\n\t\t// 体力ゲージの長さを更新する\n\t\tbar.width = (480 * Hack.player.hp) / MAX\n\t}\n\tHack.menuGroup.addChild(bar)\n\n\t// コウモリ\n\tconst item1 = new RPGObject()\n\titem1.mod(('▼ スキン', _kこうもり))\n\t// コウモリを 11, 5 の位置に移動する ( map1 )\n\titem1.locate(11, 5, 'map1')\n\t// コウモリを更新する...\n\titem1.onつねに = () => {\n\t\t//　コウモリの横の位置をプレイヤーと同じにする\n\t\titem1.y = Hack.player.y\n\t\titem1.updateCollider()\n\t}\n\titem1.onattacked = () => {\n\t\tHack.logFunc('こうげきは かわされた\\nけんは あたらないようだ`', true)\n\t}\n\n\t// 魔道書にコウモリを登録する\n\tfeeles.setAlias('コウモリ', item1)\n\n\tHack.logFunc(next =>\n\t\tplayer.mapX >= item1.mapX\n\t\t\t? next()\n\t\t\t: '今なら あの コウモリを こえて\\nかいだんに たどりつけるだろう'\n\t)\n\n\t// かいだん\n\tconst item2 = new RPGObject()\n\titem2.mod(('▼ スキン', _nのぼりかいだん))\n\t// 階段を 14, 5　の位置に配置する ( map1 )\n\titem2.locate(14, 5, 'map1')\n\t// 階段を下の方に置く\n\titem2.layer = RPGMap.Layer.Under\n\t// 階段にプレイヤーが乗ったら...\n\titem2.onふまれた = event => {\n\t\tif (event.item === Hack.player) {\n\t\t\t// 説明書 2 を開く\n\t\t\t// feeles.openReadme('stages/6/README2.md');\n\t\t\t// 魔道書の 2 ページ目を開く\n\t\t\tfeeles.openCode('stages/6/code2.js')\n\t\t\t// マップ map2 に移動する\n\t\t\tHack.changeMap('map2')\n\t\t\t// プレイヤーを 0, 5 の位置に移動する ( map2 )\n\t\t\tHack.player.locate(0, 5, 'map2')\n\t\t}\n\t}\n\n\t// このステージを改造\n\textra(0, 5, 'map1', 'stages/6/main.js')\n}\n\ngame.onload = gameStart\ngame.on('load', main2)\ngame.on('load', main3)\ngame.on('load', main4)\nHack.on('load', createMap1)\nHack.on('load', createMap2)\nHack.on('load', createMap3)\nHack.on('load', createMap4)\nHack.start()\n","_transpileCache":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _main = require(\"http://localhost:8080/main.js\");\n\nvar _main2 = _interopRequireDefault(require(\"./main2\"));\n\nvar _main3 = _interopRequireDefault(require(\"./main3\"));\n\nvar _main4 = _interopRequireDefault(require(\"./main4\"));\n\nvar _extra = _interopRequireDefault(require(\"../extra\"));\n\nvar _maps = require(\"./maps\");\n\nvar _utils = require(\"../../utils\");\n\n(0, _main.register)(window);\n(0, _utils.prepareUtils)();\ngame.preload('resources/hackforplay/bar_green.png', 'resources/hackforplay/bar_red.png');\n\nfunction gameStart() {\n  game.dispatchEvent(new _main.enchant.Event('awake')); // map1 を読み込む\n\n  _main.Hack.changeMap('map1'); // 魔道書を開く\n\n\n  feeles.openCode('stages/6/code1.js'); // 解説の youtube を開く\n  // const youtube = new RPGObject();\n  // youtube.mod(Hack.assets.village);\n  // youtube.locate(0, 4);\n  // youtube.on('addtrodden', event => {\n  // \tif (event.item === Hack.player) {\n  // \t\tfeeles.openMedia({\n  // \t\t\turl: 'https://youtu.be/yfwUHmf0DYA',\n  // \t\t\tplaying: true,\n  // \t\t\tcontrols: true,\n  // \t\t\tvolume: 0.2\n  // \t\t});\n  // \t}\n  // });\n  // 説明書を開く\n  // feeles.openReadme('stages/6/README.md');\n  // プレイヤー（騎士）\n\n  var player = _main.Hack.player = new Player(('▼ スキン', _kきし));\n  player.mod(('▼ スキン', _kきし)); // プレイヤーを　7, 6 の位置に移動する\n\n  player.locate(7, 6); // プレイヤーの体力\n\n  player.hp = 3; // プレイヤーの攻撃力\n\n  player.atk = 1; // プレイヤーがやられたら...\n\n  player.onたおれたとき = function () {\n    // プレイヤーを削除\n    this.destroy(); // ゲームオーバー\n\n    _main.Hack.gameover();\n  }; // 魔道書にプレイヤーを登録する\n\n\n  feeles.setAlias('プレイヤー', player); // \tHP Gage\n  // 体力のゲージを作る\n  // 体力は最大で 9999\n\n  var MAX = 9999;\n  var bar = new Sprite(480, 32);\n  bar.image = game.assets['resources/hackforplay/bar_green.png']; // 体力ゲージの位置\n\n  bar.moveTo(0, 300); // 体力ゲージを更新する...\n\n  bar.onenterframe = function () {\n    // プレイヤーの体力が、体力の最大値を超えないようにする\n    _main.Hack.player.hp = Math.min(_main.Hack.player.hp, MAX); // 体力ゲージの長さを更新する\n\n    bar.width = 480 * _main.Hack.player.hp / MAX;\n  };\n\n  _main.Hack.menuGroup.addChild(bar); // コウモリ\n\n\n  var item1 = new RPGObject();\n  item1.mod(('▼ スキン', _kこうもり)); // コウモリを 11, 5 の位置に移動する ( map1 )\n\n  item1.locate(11, 5, 'map1'); // コウモリを更新する...\n\n  item1.onつねに = function () {\n    //　コウモリの横の位置をプレイヤーと同じにする\n    item1.y = _main.Hack.player.y;\n    item1.updateCollider();\n  };\n\n  item1.onattacked = function () {\n    _main.Hack.logFunc('こうげきは かわされた\\nけんは あたらないようだ`', true);\n  }; // 魔道書にコウモリを登録する\n\n\n  feeles.setAlias('コウモリ', item1);\n\n  _main.Hack.logFunc(function (next) {\n    return player.mapX >= item1.mapX ? next() : '今なら あの コウモリを こえて\\nかいだんに たどりつけるだろう';\n  }); // かいだん\n\n\n  var item2 = new RPGObject();\n  item2.mod(('▼ スキン', _nのぼりかいだん)); // 階段を 14, 5　の位置に配置する ( map1 )\n\n  item2.locate(14, 5, 'map1'); // 階段を下の方に置く\n\n  item2.layer = RPGMap.Layer.Under; // 階段にプレイヤーが乗ったら...\n\n  item2.onふまれた = function (event) {\n    if (event.item === _main.Hack.player) {\n      // 説明書 2 を開く\n      // feeles.openReadme('stages/6/README2.md');\n      // 魔道書の 2 ページ目を開く\n      feeles.openCode('stages/6/code2.js'); // マップ map2 に移動する\n\n      _main.Hack.changeMap('map2'); // プレイヤーを 0, 5 の位置に移動する ( map2 )\n\n\n      _main.Hack.player.locate(0, 5, 'map2');\n    }\n  }; // このステージを改造\n\n\n  (0, _extra.default)(0, 5, 'map1', 'stages/6/main.js');\n}\n\ngame.onload = gameStart;\ngame.on('load', _main2.default);\ngame.on('load', _main3.default);\ngame.on('load', _main4.default);\n\n_main.Hack.on('load', _maps.createMap1);\n\n_main.Hack.on('load', _maps.createMap2);\n\n_main.Hack.on('load', _maps.createMap3);\n\n_main.Hack.on('load', _maps.createMap4);\n\n_main.Hack.start();","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/6/main2.js","type":"application/javascript","lastModified":1547038235535,"composed":"import extra from '../extra'\n\nexport default function gameStartLazy() {\n\tconst logたいりょく = next =>\n\t\tHack.player.hp < 3\n\t\t\t? `\nたいりょくが あぶない！\nのこり hp : ${Hack.player.hp}`\n\t\t\t: next()\n\tHack.player.on('hpchange', () => {\n\t\tHack.logFunc(logたいりょく)\n\t})\n\n\t// ドラゴン\n\tconst item1 = new RPGObject()\n\titem1.mod(('▼ スキン', _dドラゴン))\n\t// ドラゴンの体力\n\titem1.hp = 14\n\t// ドラゴンの位置を調整する\n\titem1.offset = {\n\t\tx: -32,\n\t\ty: -60\n\t}\n\titem1.collider.setOffset({\n\t\tx: 16,\n\t\ty: 48\n\t})\n\t// ドラゴンを 11, 5 の位置に移動する ( map2 )\n\titem1.locate(11, 5, 'map2')\n\t// ドラゴンを拡大する ( ２　倍に　)\n\titem1.scale(2, 2)\n\t// ドラゴンの動きを設定する\n\titem1.setFrame('Idle', [10])\n\t//　ドラゴンを更新する...\n\titem1.breath({\n\t\tskin: ('▼ スキン', Skin.バクエン),\n\t\tspeed: 5,\n\t\tscale: 1\n\t})\n\tObject.defineProperty(item1, 'atk', {\n\t\tget: function() {\n\t\t\tconst damage = Hack.player.hp <= 3 ? 1 : 450\n\t\t\treturn damage\n\t\t}\n\t})\n\n\t// dragon をコードから利用可能に\n\tfeeles.setAlias('ドラゴン', item1)\n\n\t// \tLife gage\n\t// 体力ゲージを作る\n\tconst MAX = item1.hp\n\tconst bar1 = new Sprite(480, 32)\n\tbar1.image = game.assets['resources/hackforplay/bar_red.png']\n\t// 体力ゲージの位置\n\tbar1.moveTo(0, 0)\n\t// 体力ゲージを更新する...\n\tbar1.onenterframe = () => {\n\t\t// map2 じゃないなら表示しない\n\t\tbar1.visible = Hack.map === Hack.maps['map2']\n\t\titem1.hp = Math.min(item1.hp, MAX)\n\t\t// ゲージの長さを設定する\n\t\tbar1.width = (480 * item1.hp) / MAX\n\t}\n\tHack.menuGroup.addChild(bar1)\n\n\t// ルビー\n\tconst item2 = new RPGObject()\n\titem2.mod(('▼ スキン', _rルビー))\n\t// ルビーを 11, 5 の位置に移動する ( map2 )\n\titem2.locate(11, 5, 'map2')\n\t// ルビーにプレイヤーが乗ったら...\n\titem2.onふまれた = event => {\n\t\tif (event.item === Hack.player) {\n\t\t\t// 階段を作る！\n\t\t\t// もう少し下のところに階段を作るコードが書いてあるよ！\n\t\t\tappearDownStair()\n\t\t\t// ルビーを削除する\n\t\t\titem2.destroy()\n\t\t}\n\t}\n\n\t// ruby をコードから利用可能に\n\tfeeles.setAlias('ルビー', item2)\n\n\t// 階段を作るコード （ 関数 )\n\tfunction appearDownStair() {\n\t\t// かいだん\n\t\tconst item3 = new RPGObject()\n\t\titem3.mod(('▼ スキン', _kくだりかいだん))\n\t\t// 階段を 14, 5 の位置に移動する ( map2 )\n\t\titem3.locate(14, 5, 'map2')\n\t\t// 階段にプレイヤーが乗ったら...\n\t\titem3.onふまれた = event => {\n\t\t\tif (event.item === Hack.player) {\n\t\t\t\t// マップ map3 に移動する\n\t\t\t\tHack.changeMap('map3')\n\t\t\t\t// プレイヤーを 2, 5 の位置に移動する ( map3 )\n\t\t\t\tHack.player.locate(2, 5, 'map3')\n\t\t\t\t// 説明書 3 を表示する\n\t\t\t\t// feeles.openReadme('stages/6/README3.md');\n\t\t\t}\n\t\t}\n\t}\n\n\t// このステージを改造\n\textra(0, 0, 'map2', 'stages/6/main2.js')\n}\n","_transpileCache":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gameStartLazy;\n\nvar _extra = _interopRequireDefault(require(\"../extra\"));\n\nfunction gameStartLazy() {\n  var logたいりょく = function logたいりょく(next) {\n    return Hack.player.hp < 3 ? \"\\n\\u305F\\u3044\\u308A\\u3087\\u304F\\u304C \\u3042\\u3076\\u306A\\u3044\\uFF01\\n\\u306E\\u3053\\u308A hp : \".concat(Hack.player.hp) : next();\n  };\n\n  Hack.player.on('hpchange', function () {\n    Hack.logFunc(logたいりょく);\n  }); // ドラゴン\n\n  var item1 = new RPGObject();\n  item1.mod(('▼ スキン', _dドラゴン)); // ドラゴンの体力\n\n  item1.hp = 14; // ドラゴンの位置を調整する\n\n  item1.offset = {\n    x: -32,\n    y: -60\n  };\n  item1.collider.setOffset({\n    x: 16,\n    y: 48\n  }); // ドラゴンを 11, 5 の位置に移動する ( map2 )\n\n  item1.locate(11, 5, 'map2'); // ドラゴンを拡大する ( ２　倍に　)\n\n  item1.scale(2, 2); // ドラゴンの動きを設定する\n\n  item1.setFrame('Idle', [10]); //　ドラゴンを更新する...\n\n  item1.breath({\n    skin: ('▼ スキン', Skin.バクエン),\n    speed: 5,\n    scale: 1\n  });\n  Object.defineProperty(item1, 'atk', {\n    get: function get() {\n      var damage = Hack.player.hp <= 3 ? 1 : 450;\n      return damage;\n    }\n  }); // dragon をコードから利用可能に\n\n  feeles.setAlias('ドラゴン', item1); // \tLife gage\n  // 体力ゲージを作る\n\n  var MAX = item1.hp;\n  var bar1 = new Sprite(480, 32);\n  bar1.image = game.assets['resources/hackforplay/bar_red.png']; // 体力ゲージの位置\n\n  bar1.moveTo(0, 0); // 体力ゲージを更新する...\n\n  bar1.onenterframe = function () {\n    // map2 じゃないなら表示しない\n    bar1.visible = Hack.map === Hack.maps['map2'];\n    item1.hp = Math.min(item1.hp, MAX); // ゲージの長さを設定する\n\n    bar1.width = 480 * item1.hp / MAX;\n  };\n\n  Hack.menuGroup.addChild(bar1); // ルビー\n\n  var item2 = new RPGObject();\n  item2.mod(('▼ スキン', _rルビー)); // ルビーを 11, 5 の位置に移動する ( map2 )\n\n  item2.locate(11, 5, 'map2'); // ルビーにプレイヤーが乗ったら...\n\n  item2.onふまれた = function (event) {\n    if (event.item === Hack.player) {\n      // 階段を作る！\n      // もう少し下のところに階段を作るコードが書いてあるよ！\n      appearDownStair(); // ルビーを削除する\n\n      item2.destroy();\n    }\n  }; // ruby をコードから利用可能に\n\n\n  feeles.setAlias('ルビー', item2); // 階段を作るコード （ 関数 )\n\n  function appearDownStair() {\n    // かいだん\n    var item3 = new RPGObject();\n    item3.mod(('▼ スキン', _kくだりかいだん)); // 階段を 14, 5 の位置に移動する ( map2 )\n\n    item3.locate(14, 5, 'map2'); // 階段にプレイヤーが乗ったら...\n\n    item3.onふまれた = function (event) {\n      if (event.item === Hack.player) {\n        // マップ map3 に移動する\n        Hack.changeMap('map3'); // プレイヤーを 2, 5 の位置に移動する ( map3 )\n\n        Hack.player.locate(2, 5, 'map3'); // 説明書 3 を表示する\n        // feeles.openReadme('stages/6/README3.md');\n      }\n    };\n  } // このステージを改造\n\n\n  (0, _extra.default)(0, 0, 'map2', 'stages/6/main2.js');\n}","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/6/main3.js","type":"application/javascript","lastModified":1547038235535,"composed":"import extra from '../extra'\n\nexport default function gameStartLazy() {\n\t// プレイヤーが map3 に入ったら\n\tHack.maps['map3'].onload = () => {\n\t\t// コードをとじる\n\t\tfeeles.closeCode()\n\t\t// YouTubeをとじる\n\t\tfeeles.closeMedia()\n\t}\n\n\t// かいだん\n\tconst item1 = new RPGObject()\n\titem1.mod(('▼ スキン', _nのぼりかいだん))\n\t// 階段を 14, 5 の位置に移動する　( map3 )\n\titem1.locate(14, 5, 'map3')\n\t// 階段を下の方に置く ( Under )\n\titem1.layer = RPGMap.Layer.Under\n\t// 階段にプレイヤーが乗ったら...\n\titem1.onふまれた = event => {\n\t\tif (event.item === Hack.player) {\n\t\t\t// プレイヤーを 2, 5 の位置に移動する ( map4 )\n\t\t\tHack.player.locate(2, 5, 'map4')\n\t\t\t// マップ map4 に移動する\n\t\t\tHack.changeMap('map4')\n\t\t\t// 説明書 4 を表示する\n\t\t\t// feeles.openReadme('stages/6/README4.md');\n\t\t}\n\t}\n\n\t// 宝箱とコインをたくさん作る\n\t// 0 なら何も出ないけど、\n\t// 1 なら宝箱が出るし、\n\t// 2 ならコインが出る！\n\t// ためしに数値を書き換えてみよう！\n\t;[\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n\t].forEach((array, y) => {\n\t\tarray.forEach((value, x) => {\n\t\t\t// もし数値が 1 なら...\n\t\t\tif (value === 1) {\n\t\t\t\t// 宝箱を出す！\n\t\t\t\tappearBox(x, y)\n\t\t\t}\n\t\t\t// もし数値が 2 なら...\n\t\t\tif (value === 2) {\n\t\t\t\t// コインを出す！\n\t\t\t\tappearCoin(x, y)\n\t\t\t}\n\t\t})\n\t})\n\n\t// 宝箱を作るコード （ 関数 ）\n\tfunction appearBox(x, y) {\n\t\t// はこ\n\t\tconst item1 = new RPGObject()\n\t\titem1.mod(('▼ スキン', _tたからばこ))\n\t\t// 宝箱を x, y の位置に移動する ( map3 )\n\t\titem1.locate(x, y, 'map3')\n\t\t// 宝箱にプレイヤーが乗ったら...\n\t\titem1.onふまれた = event => {\n\t\t\tif (event.item === Hack.player) {\n\t\t\t\t// 宝箱を削除する\n\t\t\t\titem1.destroy()\n\t\t\t\t// スコアを 400　アップ！！！！\n\t\t\t\tHack.score += 400\n\t\t\t}\n\t\t}\n\t\treturn item1\n\t}\n\n\t//　コインを作るコード （ 関数 ）\n\tfunction appearCoin(x, y) {\n\t\t// コイン\n\t\tconst item1 = new RPGObject()\n\t\titem1.mod(('▼ スキン', _kコイン))\n\t\t// コインを x, y の位置に作る　( map3 )\n\t\titem1.locate(x, y, 'map3')\n\t\t// コインにプレイヤーが乗ったら...\n\t\titem1.onふまれた = event => {\n\t\t\tif (event.item === Hack.player) {\n\t\t\t\t// コインを削除する\n\t\t\t\titem1.destroy()\n\t\t\t\t// スコアを 400 アップ！！！！\n\t\t\t\tHack.score += 400\n\t\t\t}\n\t\t}\n\t\treturn item1\n\t}\n\n\t// このステージを改造\n\textra(0, 0, 'map3', 'stages/6/main3.js')\n}\n","_transpileCache":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gameStartLazy;\n\nvar _extra = _interopRequireDefault(require(\"../extra\"));\n\nfunction gameStartLazy() {\n  // プレイヤーが map3 に入ったら\n  Hack.maps['map3'].onload = function () {\n    // コードをとじる\n    feeles.closeCode(); // YouTubeをとじる\n\n    feeles.closeMedia();\n  }; // かいだん\n\n\n  var item1 = new RPGObject();\n  item1.mod(('▼ スキン', _nのぼりかいだん)); // 階段を 14, 5 の位置に移動する　( map3 )\n\n  item1.locate(14, 5, 'map3'); // 階段を下の方に置く ( Under )\n\n  item1.layer = RPGMap.Layer.Under; // 階段にプレイヤーが乗ったら...\n\n  item1.onふまれた = function (event) {\n    if (event.item === Hack.player) {\n      // プレイヤーを 2, 5 の位置に移動する ( map4 )\n      Hack.player.locate(2, 5, 'map4'); // マップ map4 に移動する\n\n      Hack.changeMap('map4'); // 説明書 4 を表示する\n      // feeles.openReadme('stages/6/README4.md');\n    }\n  } // 宝箱とコインをたくさん作る\n  // 0 なら何も出ないけど、\n  // 1 なら宝箱が出るし、\n  // 2 ならコインが出る！\n  // ためしに数値を書き換えてみよう！\n  ;\n\n  [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]].forEach(function (array, y) {\n    array.forEach(function (value, x) {\n      // もし数値が 1 なら...\n      if (value === 1) {\n        // 宝箱を出す！\n        appearBox(x, y);\n      } // もし数値が 2 なら...\n\n\n      if (value === 2) {\n        // コインを出す！\n        appearCoin(x, y);\n      }\n    });\n  }); // 宝箱を作るコード （ 関数 ）\n\n  function appearBox(x, y) {\n    // はこ\n    var item1 = new RPGObject();\n    item1.mod(('▼ スキン', _tたからばこ)); // 宝箱を x, y の位置に移動する ( map3 )\n\n    item1.locate(x, y, 'map3'); // 宝箱にプレイヤーが乗ったら...\n\n    item1.onふまれた = function (event) {\n      if (event.item === Hack.player) {\n        // 宝箱を削除する\n        item1.destroy(); // スコアを 400　アップ！！！！\n\n        Hack.score += 400;\n      }\n    };\n\n    return item1;\n  } //　コインを作るコード （ 関数 ）\n\n\n  function appearCoin(x, y) {\n    // コイン\n    var item1 = new RPGObject();\n    item1.mod(('▼ スキン', _kコイン)); // コインを x, y の位置に作る　( map3 )\n\n    item1.locate(x, y, 'map3'); // コインにプレイヤーが乗ったら...\n\n    item1.onふまれた = function (event) {\n      if (event.item === Hack.player) {\n        // コインを削除する\n        item1.destroy(); // スコアを 400 アップ！！！！\n\n        Hack.score += 400;\n      }\n    };\n\n    return item1;\n  } // このステージを改造\n\n\n  (0, _extra.default)(0, 0, 'map3', 'stages/6/main3.js');\n}","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/6/main4.js","type":"application/javascript","lastModified":1547038235536,"composed":"import extra from '../extra'\n\nexport default function gameStartLazy() {\n\t// しろ\n\tconst item1 = new RPGObject()\n\titem1.mod(('▼ スキン', _sしろ))\n\t// 城の透明度（うすさ）を 0 にする（見えなくする）\n\titem1.opacity = 0\n\t// 城を 13, 5 の位置に移動する ( map4 )\n\titem1.locate(13, 5, 'map4')\n\t// 城にプレイヤーが乗ったら...\n\titem1.onふまれた = event => {\n\t\tif (event.item === Hack.player) {\n\t\t\t// 城を削除する\n\t\t\titem1.destroy()\n\t\t\t// ゲームクリアー！！！！！！\n\t\t\tgameclear()\n\t\t}\n\t}\n\n\t// ゲームクリアのコード　（　関数 )\n\tfunction gameclear() {\n\t\t// 画面を暗くする\n\t\tconst dark = Hack.overlay('rgb(0,0,0,1)')\n\t\tdark.opacity = 0\n\t\tHack.overlayGroup.addChild(dark)\n\t\tdark.tl\n\t\t\t.delay(30)\n\t\t\t.then(function() {\n\t\t\t\tHack.menuGroup.parentNode.removeChild(Hack.menuGroup)\n\t\t\t})\n\t\t\t.fadeIn(90, enchant.Easing.CUBIC_EASEOUT)\n\t\t\t.then(function() {\n\t\t\t\tconst textArea = new TextArea(480, 320)\n\t\t\t\ttextArea.x = (480 - textArea.w) / 2\n\t\t\t\ttextArea.y = 0\n\t\t\t\ttextArea.margin = 20\n\t\t\t\ttextArea.defaultStyle = {\n\t\t\t\t\tcolor: '#fff',\n\t\t\t\t\tsize: '32',\n\t\t\t\t\tfamily: 'PixelMplus, sans-serif',\n\t\t\t\t\tweight: 'bold',\n\t\t\t\t\talign: 'center',\n\t\t\t\t\tspace: 0,\n\t\t\t\t\truby: null,\n\t\t\t\t\trubyId: null\n\t\t\t\t}\n\t\t\t\tHack.overlayGroup.addChild(textArea)\n\t\t\t\ttextArea.push(`\nゲームクリア おめでとう！\nつぎは なにをしますか？`)\n\t\t\t\ttextArea.show()\n\n\t\t\t\tbutton('ほかのステージであそぶ', 130).ontouchend = () => {\n\t\t\t\t\tfeeles.dispatchOnMessage({\n\t\t\t\t\t\thref: '/lists/trending'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tbutton('自分のステージをつくる', 180).ontouchend = () => {\n\t\t\t\t\tfeeles.dispatchOnMessage({\n\t\t\t\t\t\thref: '/contents/kit'\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tbutton('もういちどあそぶ', 230).ontouchend = () => {\n\t\t\t\t\tfeeles.replace('stages/1/index.html')\n\t\t\t\t}\n\t\t\t})\n\n\t\tfunction button(text, y) {\n\t\t\tconst btn = new TextArea(300, 38)\n\t\t\tbtn.x = (480 - btn.w) / 2\n\t\t\tbtn.y = y\n\t\t\tbtn.margin = 0\n\t\t\tbtn.padding = 8\n\t\t\tbtn.background = 'rgb(251, 147, 36)'\n\t\t\tbtn.defaultStyle = {\n\t\t\t\tcolor: '#fff',\n\t\t\t\tsize: '20',\n\t\t\t\tfamily: 'PixelMplus, sans-serif',\n\t\t\t\tweight: 'bold',\n\t\t\t\talign: 'center',\n\t\t\t\tspace: 0,\n\t\t\t\truby: null,\n\t\t\t\trubyId: null\n\t\t\t}\n\t\t\tHack.overlayGroup.addChild(btn)\n\t\t\tbtn.push(text)\n\t\t\tbtn.show()\n\t\t\treturn btn\n\t\t}\n\t}\n\n\t// このステージを改造\n\textra(13, 7, 'map4', 'stages/6/main4.js')\n}\n","_transpileCache":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gameStartLazy;\n\nvar _extra = _interopRequireDefault(require(\"../extra\"));\n\nfunction gameStartLazy() {\n  // しろ\n  var item1 = new RPGObject();\n  item1.mod(('▼ スキン', _sしろ)); // 城の透明度（うすさ）を 0 にする（見えなくする）\n\n  item1.opacity = 0; // 城を 13, 5 の位置に移動する ( map4 )\n\n  item1.locate(13, 5, 'map4'); // 城にプレイヤーが乗ったら...\n\n  item1.onふまれた = function (event) {\n    if (event.item === Hack.player) {\n      // 城を削除する\n      item1.destroy(); // ゲームクリアー！！！！！！\n\n      gameclear();\n    }\n  }; // ゲームクリアのコード　（　関数 )\n\n\n  function gameclear() {\n    // 画面を暗くする\n    var dark = Hack.overlay('rgb(0,0,0,1)');\n    dark.opacity = 0;\n    Hack.overlayGroup.addChild(dark);\n    dark.tl.delay(30).then(function () {\n      Hack.menuGroup.parentNode.removeChild(Hack.menuGroup);\n    }).fadeIn(90, enchant.Easing.CUBIC_EASEOUT).then(function () {\n      var textArea = new TextArea(480, 320);\n      textArea.x = (480 - textArea.w) / 2;\n      textArea.y = 0;\n      textArea.margin = 20;\n      textArea.defaultStyle = {\n        color: '#fff',\n        size: '32',\n        family: 'PixelMplus, sans-serif',\n        weight: 'bold',\n        align: 'center',\n        space: 0,\n        ruby: null,\n        rubyId: null\n      };\n      Hack.overlayGroup.addChild(textArea);\n      textArea.push(\"\\n\\u30B2\\u30FC\\u30E0\\u30AF\\u30EA\\u30A2 \\u304A\\u3081\\u3067\\u3068\\u3046\\uFF01\\n\\u3064\\u304E\\u306F \\u306A\\u306B\\u3092\\u3057\\u307E\\u3059\\u304B\\uFF1F\");\n      textArea.show();\n\n      button('ほかのステージであそぶ', 130).ontouchend = function () {\n        feeles.dispatchOnMessage({\n          href: '/lists/trending'\n        });\n      };\n\n      button('自分のステージをつくる', 180).ontouchend = function () {\n        feeles.dispatchOnMessage({\n          href: '/contents/kit'\n        });\n      };\n\n      button('もういちどあそぶ', 230).ontouchend = function () {\n        feeles.replace('stages/1/index.html');\n      };\n    });\n\n    function button(text, y) {\n      var btn = new TextArea(300, 38);\n      btn.x = (480 - btn.w) / 2;\n      btn.y = y;\n      btn.margin = 0;\n      btn.padding = 8;\n      btn.background = 'rgb(251, 147, 36)';\n      btn.defaultStyle = {\n        color: '#fff',\n        size: '20',\n        family: 'PixelMplus, sans-serif',\n        weight: 'bold',\n        align: 'center',\n        space: 0,\n        ruby: null,\n        rubyId: null\n      };\n      Hack.overlayGroup.addChild(btn);\n      btn.push(text);\n      btn.show();\n      return btn;\n    }\n  } // このステージを改造\n\n\n  (0, _extra.default)(13, 7, 'map4', 'stages/6/main4.js');\n}","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/6/maps.js","type":"application/javascript","lastModified":1538873336685,"composed":"export function createMap1() {\n\t// map1 というマップを作る\n\tconst mapName = 'map1';\n\n\t// 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\tconst map = new RPGMap(32, 32, 15, 10);\n\n\tmap.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\n\tconst ___ = -1;\n\n\t// マップの地形をつくる\n\tmap.bmap.loadData(\n\t\t[\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t422,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t341,\n\t\t\t\t341\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321,\n\t\t\t\t341,\n\t\t\t\t321,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321,\n\t\t\t\t402,\n\t\t\t\t321,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t341,\n\t\t\t\t341\n\t\t\t]\n\t\t]\n\t);\n\n\t// マップの歩ける場所を決める\n\t// 1 なら歩けないし、 0 なら歩ける\n\tmap.cmap = [\n\t\t[1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1],\n\t\t[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n\t\t[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n\t\t[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1],\n\t\t[1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1]\n\t];\n\n\tHack.maps[mapName] = map;\n}\n\nexport function createMap2() {\n\t//　map2 というマップを作る\n\tconst mapName = 'map2';\n\n\t// 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\tconst map = new RPGMap(32, 32, 15, 10);\n\n\tmap.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\n\tconst ___ = -1;\n\n\t// マップの地形をつくる\n\tmap.bmap.loadData([\n\t\t[323, 54, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n\t\t[35, 15, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n\t\t[55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n\t\t[55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n\t\t[75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75],\n\t\t[323, 323, 323, 323, 323, 323, 323, 323, 323, 323, 323, 323, 323, 323, 323],\n\t\t[35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35],\n\t\t[55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n\t\t[55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n\t\t[55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55]\n\t]);\n\n\t// マップの歩ける場所を決める\n\t// 1 なら歩けないし、 0 なら歩ける\n\tmap.cmap = [\n\t\t[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n\t];\n\n\tHack.maps[mapName] = map;\n}\n\nexport function createMap3() {\n\t// map3 というマップを作る\n\tconst mapName = 'map3';\n\n\t// 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\tconst map = new RPGMap(32, 32, 15, 10);\n\n\tmap.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\n\tconst ___ = -1;\n\n\t// マップの地形をつくる\n\tmap.bmap.loadData(\n\t\t[\n\t\t\t[55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n\t\t\t[55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n\t\t\t[55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n\t\t\t[55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n\t\t\t[55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n\t\t\t[55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n\t\t\t[55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n\t\t\t[55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n\t\t\t[55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55],\n\t\t\t[55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t54,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[35, 15, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___],\n\t\t\t[___, ___, 16, 75, 75, 75, 75, 75, 17, ___, ___, ___, ___, ___, ___],\n\t\t\t[___, ___, 56, 323, 323, 323, 323, 323, 54, ___, ___, ___, ___, ___, ___],\n\t\t\t[75, 75, 76, 323, 323, 323, 323, 323, 74, 75, 75, 75, 75, 75, 75],\n\t\t\t[\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323,\n\t\t\t\t323\n\t\t\t],\n\t\t\t[35, 35, 36, 323, 323, 323, 323, 323, 34, 35, 35, 35, 35, 35, 35],\n\t\t\t[___, ___, 56, 323, 323, 323, 323, 323, 54, ___, ___, ___, ___, ___, ___],\n\t\t\t[___, ___, 14, 35, 35, 35, 35, 35, 15, ___, ___, ___, ___, ___, ___],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___\n\t\t\t]\n\t\t]\n\t);\n\n\t// マップの歩ける場所を決める\n\t// 1 なら歩けないし、 0 なら歩ける\n\tmap.cmap = [\n\t\t[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1],\n\t\t[0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1],\n\t\t[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1],\n\t\t[1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n\t];\n\n\tHack.maps[mapName] = map;\n}\n\nexport function createMap4() {\n\t// map4 というマップを作る\n\tconst mapName = 'map4';\n\n\t// 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\tconst map = new RPGMap(32, 32, 15, 10);\n\n\tmap.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\n\tconst ___ = -1;\n\n\t// マップの地形をつくる\n\tmap.bmap.loadData(\n\t\t[\n\t\t\t[\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t206,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322\n\t\t\t],\n\t\t\t[\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t206,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322\n\t\t\t],\n\t\t\t[\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t206,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322\n\t\t\t],\n\t\t\t[\n\t\t\t\t166,\n\t\t\t\t225,\n\t\t\t\t225,\n\t\t\t\t225,\n\t\t\t\t167,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t206,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322\n\t\t\t],\n\t\t\t[\n\t\t\t\t206,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t224,\n\t\t\t\t225,\n\t\t\t\t225,\n\t\t\t\t225,\n\t\t\t\t225,\n\t\t\t\t225,\n\t\t\t\t225,\n\t\t\t\t226,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322\n\t\t\t],\n\t\t\t[\n\t\t\t\t206,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322\n\t\t\t],\n\t\t\t[\n\t\t\t\t206,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t184,\n\t\t\t\t185,\n\t\t\t\t185,\n\t\t\t\t185,\n\t\t\t\t185,\n\t\t\t\t185,\n\t\t\t\t185,\n\t\t\t\t186,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322\n\t\t\t],\n\t\t\t[\n\t\t\t\t164,\n\t\t\t\t185,\n\t\t\t\t185,\n\t\t\t\t185,\n\t\t\t\t165,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t206,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322\n\t\t\t],\n\t\t\t[\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t206,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322\n\t\t\t],\n\t\t\t[\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t205,\n\t\t\t\t206,\n\t\t\t\t322,\n\t\t\t\t322,\n\t\t\t\t322\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t461,\n\t\t\t\t462,\n\t\t\t\t461\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t481,\n\t\t\t\t482,\n\t\t\t\t481\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t421,\n\t\t\t\t421,\n\t\t\t\t461\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t421,\n\t\t\t\t421,\n\t\t\t\t481\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t421,\n\t\t\t\t421,\n\t\t\t\t421,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t421,\n\t\t\t\t421,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t421,\n\t\t\t\t___,\n\t\t\t\t421,\n\t\t\t\t421,\n\t\t\t\t421,\n\t\t\t\t421,\n\t\t\t\t421,\n\t\t\t\t421,\n\t\t\t\t421,\n\t\t\t\t421,\n\t\t\t\t421,\n\t\t\t\t421,\n\t\t\t\t421,\n\t\t\t\t___\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t421,\n\t\t\t\t421,\n\t\t\t\t421,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t421,\n\t\t\t\t421,\n\t\t\t\t461\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t421,\n\t\t\t\t421,\n\t\t\t\t481\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t461,\n\t\t\t\t462,\n\t\t\t\t461\n\t\t\t],\n\t\t\t[\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t481,\n\t\t\t\t482,\n\t\t\t\t481\n\t\t\t]\n\t\t]\n\t);\n\n\t// マップの歩ける場所を決める\n\t// 1 なら歩けないし、 0 なら歩ける\n\tmap.cmap = [\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],\n\t\t[1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],\n\t\t[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t[1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]\n\t];\n\n\tHack.maps[mapName] = map;\n}\n","_transpileCache":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createMap1 = createMap1;\nexports.createMap2 = createMap2;\nexports.createMap3 = createMap3;\nexports.createMap4 = createMap4;\n\nfunction createMap1() {\n  // map1 というマップを作る\n  var mapName = 'map1'; // 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\n  var map = new RPGMap(32, 32, 15, 10);\n  map.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\n  var ___ = -1; // マップの地形をつくる\n\n\n  map.bmap.loadDataマップの歩ける場所を決める\n  // 1 なら歩けないし、 0 なら歩ける\n\n  map.cmap = [[1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1]];\n  Hack.maps[mapName] = map;\n}\n\nfunction createMap2() {\n  //　map2 というマップを作る\n  var mapName = 'map2'; // 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\n  var map = new RPGMap(32, 32, 15, 10);\n  map.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\n  var ___ = -1; // マップの地形をつくる\n\n\n  map.bmap.loadData([[323, 54, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55], [35, 15, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55], [55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55], [55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55], [75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75], [323, 323, 323, 323, 323, 323, 323, 323, 323, 323, 323, 323, 323, 323, 323], [35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35], [55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55], [55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55], [55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55]]); // マップの歩ける場所を決める\n  // 1 なら歩けないし、 0 なら歩ける\n\n  map.cmap = [[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]];\n  Hack.maps[mapName] = map;\n}\n\nfunction createMap3() {\n  // map3 というマップを作る\n  var mapName = 'map3'; // 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\n  var map = new RPGMap(32, 32, 15, 10);\n  map.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\n  var ___ = -1; // マップの地形をつくる\n\n\n  map.bmap.loadDataマップの歩ける場所を決める\n  // 1 なら歩けないし、 0 なら歩ける\n\n  map.cmap = [[0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]];\n  Hack.maps[mapName] = map;\n}\n\nfunction createMap4() {\n  // map4 というマップを作る\n  var mapName = 'map4'; // 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\n  var map = new RPGMap(32, 32, 15, 10);\n  map.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\n  var ___ = -1; // マップの地形をつくる\n\n\n  map.bmap.loadData([[205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 206, 322, 322, 322], [205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 206, 322, 322, 322], [205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 206, 322, 322, 322], [166, 225, 225, 225, 167, 205, 205, 205, 205, 205, 205, 206, 322, 322, 322], [206, 322, 322, 322, 224, 225, 225, 225, 225, 225, 225, 226, 322, 322, 322], [206, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322, 322], [206, 322, 322, 322, 184, 185, 185, 185, 185, 185, 185, 186, 322, 322, 322], [164, 185, 185, 185, 165, 205, 205, 205, 205, 205, 205, 206, 322, 322, 322], [205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 206, 322, 322, 322], [205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 206, 322, 322, 322]], [[___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, 461, 462, 461], [___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, 481, 482, 481], [___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, 421, 421, 461], [___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, 421, 421, 481], [___, 421, 421, 421, ___, ___, ___, ___, ___, ___, ___, ___, 421, 421, ___], [___, 421, ___, 421, 421, 421, 421, 421, 421, 421, 421, 421, 421, 421, ___], [___, 421, 421, 421, ___, ___, ___, ___, ___, ___, ___, ___, 421, 421, 461], [___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, 421, 421, 481], [___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, 461, 462, 461], [___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, ___, 481, 482, 481]]); // マップの歩ける場所を決める\n  // 1 なら歩けないし、 0 なら歩ける\n\n  map.cmap = [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0]];\n  Hack.maps[mapName] = map;\n}","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/7/index.html","type":"text/html","lastModified":1526963763957,"composed":"<!DOCTYPE html>\n\t<html>\n\t<head>\n\t<meta charset=\"utf-8\">\n\t\t<title>7 神殿</title>\n<link rel=\"stylesheet\" href=\"style.css\">\n\t<script src=\"lib/polyfill.js\"></script>\n<script src=\"lib/interrupt.js\"></script>\n<script src=\"stages/7/main.js\"></script>\n</head>\n<body>\n\t</body>\n</html>","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"stages/7/main.js","type":"application/javascript","lastModified":1547038235537,"composed":"import { enchant, Hack, register } from 'http://localhost:8080/main.js'\nimport createMap from './maps'\nimport extra, { flag } from '../extra'\nimport { prepareUtils } from '../../utils'\n\nregister(window)\nprepareUtils()\n\nfunction gameStart() {\n\tgame.dispatchEvent(new enchant.Event('awake'))\n\n\t// map1 を読み込む\n\tHack.changeMap('map1')\n\n\t// プレイヤー（騎士）\n\tconst player = (Hack.player = new Player(('▼ スキン', _kきし)))\n\tplayer.mod(('▼ スキン', _kきし))\n\t// プレイヤーを 7, 5 の位置に移動する\n\tplayer.locate(7, 5)\n\t// プレイヤーの体力\n\tplayer.hp = 3\n\t// プレイヤーの攻撃力\n\tplayer.atk = 1\n\t// プレイヤーがやられたら...\n\tplayer.onたおれたとき = function() {\n\t\t// プレイヤーを削除する\n\t\tthis.destroy()\n\t\t// ゲームオーバー\n\t\tHack.gameover()\n\t}\n\n\t// 神官\n\tconst boy = new RPGObject()\n\tboy.mod(('▼ スキン', _o男の子))\n\t// 神官を 7, ３ の位置に移動する\n\tboy.locate(7, 3)\n\t// フラグが立っていたら...\n\tif (flag) {\n\t\tHack.log('転移装置 の ふういんが とけた!')\n\t\t// 神官にぶつかったら...\n\t\tboy.onぶつかった = () => {\n\t\t\tHack.log(\n\t\t\t\t'きみの そのちから、このせかいをもっと 自由にできるんじゃないかな'\n\t\t\t)\n\t\t}\n\t}\n\t// フラグが立っていなかったら...\n\telse {\n\t\t// 神官にぶつかったら...\n\t\tboy.onぶつかった = () => {\n\t\t\tHack.log('きみが ふういんを といてくれるのかい？')\n\t\t\t// 魔道書を開く\n\t\t\tfeeles.openEditor('stages/extra.js')\n\t\t}\n\t}\n\n\t// 転移装置\n\n\t// 4, 6 の位置に　明るい緑色（lightgreen） の転移装置を作る\n\tconst warp1 = createWarp(\n\t\t4,\n\t\t6,\n\t\t'lightgreen',\n\t\t'ステージ１ \"はじまりの森\" に ワープしますか？',\n\t\t'stages/1/index.html'\n\t)\n\n\t// 5, 7 の位置に　オレンジ色（orange） の転移装置を作る\n\tconst warp2 = createWarp(\n\t\t5,\n\t\t7,\n\t\t'orange',\n\t\t'ステージ2 \"CODE の 魔法\" に ワープしますか？',\n\t\t'stages/2/index.html'\n\t)\n\n\t// 6, 7 の位置に　青色（blue） の転移装置を作る\n\tconst warp3 = createWarp(\n\t\t6,\n\t\t7,\n\t\t'blue',\n\t\t'ステージ3 \"おかしな行き止まり\" に ワープしますか？',\n\t\t'stages/3/index.html'\n\t)\n\n\t// 8, 7 の位置に　シアン（水色）（cyan） の転移装置を作る\n\tconst warp4 = createWarp(\n\t\t8,\n\t\t7,\n\t\t'cyan',\n\t\t'ステージ4 \"閉じられた群青の輝き\" に ワープしますか？',\n\t\t'stages/4/index.html'\n\t)\n\n\t// 9, 7 の位置に　黄色（yellow） の転移装置を作る\n\tconst warp5 = createWarp(\n\t\t9,\n\t\t7,\n\t\t'yellow',\n\t\t'ステージ5 \"大グモ荒野\" に ワープしますか？',\n\t\t'stages/5/index.html'\n\t)\n\n\t// 10, 8 の位置に紫色（purple)　の転移装置を作る\n\tconst warp6 = createWarp(\n\t\t10,\n\t\t8,\n\t\t'purple',\n\t\t'ステージ6 \"守りし者\" に ワープしますか？',\n\t\t'stages/6/index.html'\n\t)\n\n\t// 魔道書にプレイヤーを登録する\n\tfeeles.setAlias('プレイヤー', player)\n\n\t// このステージを改造\n\textra(13, 8, 'map1', 'stages/7/main.js')\n}\n\n// 転移装置を作るコード （ 関数 ）\nfunction createWarp(x, y, color, message, next) {\n\t// ワープ床\n\tconst warp = new RPGObject()\n\twarp.mod(('▼ スキン', _wワープ))\n\t// ワープ床を x, y の位置に移動する ( map1 )\n\twarp.locate(x, y, 'map1')\n\t// ワープ床の色を color にする\n\twarp.color = color\n\t// ワープ床は下の方に置く ( Under )\n\twarp.layer = RPGMap.Layer.Under\n\t// もしフラグが立っていたら...\n\tif (flag) {\n\t\t// ワープ床にプレイヤーが乗ったら...\n\t\twarp.onふまれた = event => {\n\t\t\tif (event.item === Hack.player) {\n\t\t\t\t// 確認して...\n\t\t\t\tif (confirm(message)) {\n\t\t\t\t\t// ワープ！\n\t\t\t\t\tfeeles.replace(next)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// もしフラグが立っていなかったら...\n\telse {\n\t\t// ワープ床の透明度（うすさ）を0.2にする（ちょっと見える）\n\t\twarp.opacity = 0.2\n\t\t// ワープ床にプレイヤーが乗ったら...\n\t\twarp.onふまれた = event => {\n\t\t\tif (event.item === Hack.player) {\n\t\t\t\t// メッセージ\n\t\t\t\talert('見えない力で 閉ざされている')\n\t\t\t}\n\t\t}\n\t}\n\treturn warp\n}\n\ngame.onload = gameStart\n\nfeeles.closeReadme()\nfeeles.closeCode()\nfeeles.closeMedia()\n\nHack.on('load', createMap)\nHack.start()\n","_transpileCache":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _main = require(\"http://localhost:8080/main.js\");\n\nvar _maps = _interopRequireDefault(require(\"./maps\"));\n\nvar _extra = _interopRequireWildcard(require(\"../extra\"));\n\nvar _utils = require(\"../../utils\");\n\n(0, _main.register)(window);\n(0, _utils.prepareUtils)();\n\nfunction gameStart() {\n  game.dispatchEvent(new _main.enchant.Event('awake')); // map1 を読み込む\n\n  _main.Hack.changeMap('map1'); // プレイヤー（騎士）\n\n\n  var player = _main.Hack.player = new Player(('▼ スキン', _kきし));\n  player.mod(('▼ スキン', _kきし)); // プレイヤーを 7, 5 の位置に移動する\n\n  player.locate(7, 5); // プレイヤーの体力\n\n  player.hp = 3; // プレイヤーの攻撃力\n\n  player.atk = 1; // プレイヤーがやられたら...\n\n  player.onたおれたとき = function () {\n    // プレイヤーを削除する\n    this.destroy(); // ゲームオーバー\n\n    _main.Hack.gameover();\n  }; // 神官\n\n\n  var boy = new RPGObject();\n  boy.mod(('▼ スキン', _o男の子)); // 神官を 7, ３ の位置に移動する\n\n  boy.locate(7, 3); // フラグが立っていたら...\n\n  if (_extra.flag) {\n    _main.Hack.log('転移装置 の ふういんが とけた!'); // 神官にぶつかったら...\n\n\n    boy.onぶつかった = function () {\n      _main.Hack.log('きみの そのちから、このせかいをもっと 自由にできるんじゃないかな');\n    };\n  } // フラグが立っていなかったら...\n  else {\n      // 神官にぶつかったら...\n      boy.onぶつかった = function () {\n        _main.Hack.log('きみが ふういんを といてくれるのかい？'); // 魔道書を開く\n\n\n        feeles.openEditor('stages/extra.js');\n      };\n    } // 転移装置\n  // 4, 6 の位置に　明るい緑色（lightgreen） の転移装置を作る\n\n\n  var warp1 = createWarp(4, 6, 'lightgreen', 'ステージ１ \"はじまりの森\" に ワープしますか？', 'stages/1/index.html'); // 5, 7 の位置に　オレンジ色（orange） の転移装置を作る\n\n  var warp2 = createWarp(5, 7, 'orange', 'ステージ2 \"CODE の 魔法\" に ワープしますか？', 'stages/2/index.html'); // 6, 7 の位置に　青色（blue） の転移装置を作る\n\n  var warp3 = createWarp(6, 7, 'blue', 'ステージ3 \"おかしな行き止まり\" に ワープしますか？', 'stages/3/index.html'); // 8, 7 の位置に　シアン（水色）（cyan） の転移装置を作る\n\n  var warp4 = createWarp(8, 7, 'cyan', 'ステージ4 \"閉じられた群青の輝き\" に ワープしますか？', 'stages/4/index.html'); // 9, 7 の位置に　黄色（yellow） の転移装置を作る\n\n  var warp5 = createWarp(9, 7, 'yellow', 'ステージ5 \"大グモ荒野\" に ワープしますか？', 'stages/5/index.html'); // 10, 8 の位置に紫色（purple)　の転移装置を作る\n\n  var warp6 = createWarp(10, 8, 'purple', 'ステージ6 \"守りし者\" に ワープしますか？', 'stages/6/index.html'); // 魔道書にプレイヤーを登録する\n\n  feeles.setAlias('プレイヤー', player); // このステージを改造\n\n  (0, _extra.default)(13, 8, 'map1', 'stages/7/main.js');\n} // 転移装置を作るコード （ 関数 ）\n\n\nfunction createWarp(x, y, color, message, next) {\n  // ワープ床\n  var warp = new RPGObject();\n  warp.mod(('▼ スキン', _wワープ)); // ワープ床を x, y の位置に移動する ( map1 )\n\n  warp.locate(x, y, 'map1'); // ワープ床の色を color にする\n\n  warp.color = color; // ワープ床は下の方に置く ( Under )\n\n  warp.layer = RPGMap.Layer.Under; // もしフラグが立っていたら...\n\n  if (_extra.flag) {\n    // ワープ床にプレイヤーが乗ったら...\n    warp.onふまれた = function (event) {\n      if (event.item === _main.Hack.player) {\n        // 確認して...\n        if (confirm(message)) {\n          // ワープ！\n          feeles.replace(next);\n        }\n      }\n    };\n  } // もしフラグが立っていなかったら...\n  else {\n      // ワープ床の透明度（うすさ）を0.2にする（ちょっと見える）\n      warp.opacity = 0.2; // ワープ床にプレイヤーが乗ったら...\n\n      warp.onふまれた = function (event) {\n        if (event.item === _main.Hack.player) {\n          // メッセージ\n          alert('見えない力で 閉ざされている');\n        }\n      };\n    }\n\n  return warp;\n}\n\ngame.onload = gameStart;\nfeeles.closeReadme();\nfeeles.closeCode();\nfeeles.closeMedia();\n\n_main.Hack.on('load', _maps.default);\n\n_main.Hack.start();","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/7/maps.js","type":"application/javascript","lastModified":1538873336686,"composed":"export default function createMap() {\n\t// map1 というマップを作る\n\tconst mapName = 'map1';\n\n\t// 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\tconst map = new RPGMap(32, 32, 15, 10);\n\n\tmap.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\n\tconst ___ = -1;\n\n\t// マップの地形をつくる\n\tmap.bmap.loadData(\n\t\t[\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t],\n\t\t\t[\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342,\n\t\t\t\t342\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t341,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t341,\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t321,\n\t\t\t\t341,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t341,\n\t\t\t\t321,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t341,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t341,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t321,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t___,\n\t\t\t\t321\n\t\t\t],\n\t\t\t[\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341,\n\t\t\t\t341\n\t\t\t]\n\t\t]\n\t);\n\n\t// マップの歩ける場所を決める\n\t// 1 なら歩けないし、 0 なら歩ける\n\tmap.cmap = [\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\t\t[1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1],\n\t\t[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1],\n\t\t[1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],\n\t\t[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n\t\t[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n\t\t[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n\t\t[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n\t\t[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\n\t\t[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1]\n\t];\n\n\tHack.maps[mapName] = map;\n}\n","_transpileCache":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createMap;\n\nfunction createMap() {\n  // map1 というマップを作る\n  var mapName = 'map1'; // 15, 10 の大きさにする ( 32 の部分は書き換えないでください )\n\n  var map = new RPGMap(32, 32, 15, 10);\n  map.imagePath = 'resources/enchantjs/x2/dotmat.gif';\n\n  var ___ = -1; // マップの地形をつくる\n\n\n  map.bmap.loadDataマップの歩ける場所を決める\n  // 1 なら歩けないし、 0 なら歩ける\n\n  map.cmap = [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1]];\n  Hack.maps[mapName] = map;\n}","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"stages/extra.js","type":"application/javascript","lastModified":1547038235538,"composed":"/*\n * 〜　コードの世界(せかい)　〜\n * 転移装置(てんいそうち) はコードによって 封印(ふういん) されていた…\n * これでは ステージを 改造(かいぞう) しに行けない！\n * 下のコードによって、封印をとめられるらしいが…\n *\n * 『封印 を とめるには、\n * 　どうすればいいだろうか？』\n *\n */\n\nexport const じゅもん = ('▼ ふういん', 'する')\n\nexport const flag = じゅもん !== 'する'\n\nexport default function makeMagic(x, y, map, fileName) {\n\t/* Remove the tutorial hacking */\n\treturn\n\n\tconst magic = new RPGObject()\n\tmagic.locate(x, y, map)\n\tmagic.layer = RPGMap.Layer.Under\n\tmagic.collisionFlag = false\n\tif (flag) {\n\t\tmagic.mod(('▼ スキン', _mまほうじんひかった))\n\t\tmagic.onふまれた = event => {\n\t\t\tif (event.item === Hack.player) {\n\t\t\t\tif (confirm('このステージを 改造(かいぞう) しますか？')) {\n\t\t\t\t\tfeeles.openEditor(fileName)\n\t\t\t\t} else if (confirm('もどりますか？')) {\n\t\t\t\t\tfeeles.replace('stages/7/index.html')\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tmagic.mod(('▼ スキン', _mまほうじん))\n\t\tmagic.onふまれた = event => {\n\t\t\tif (event.item === Hack.player) {\n\t\t\t\tHack.log('ふういんのせいで つかえない')\n\t\t\t\tconst { text } = Hack.textarea\n\t\t\t\tfeeles.setTimeout(() => {\n\t\t\t\t\tif (text === Hack.textarea.text) {\n\t\t\t\t\t\tHack.textarea.hide()\n\t\t\t\t\t}\n\t\t\t\t}, 3000)\n\t\t\t}\n\t\t}\n\t}\n}\n","_transpileCache":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = makeMagic;\nexports.flag = exports.じゅもん = void 0;\n\n/*\n * 〜　コードの世界(せかい)　〜\n * 転移装置(てんいそうち) はコードによって 封印(ふういん) されていた…\n * これでは ステージを 改造(かいぞう) しに行けない！\n * 下のコードによって、封印をとめられるらしいが…\n *\n * 『封印 を とめるには、\n * 　どうすればいいだろうか？』\n *\n */\nvar じゅもん = ('▼ ふういん', 'する');\nexports.じゅもん = じゅもん;\nvar flag = じゅもん !== 'する';\nexports.flag = flag;\n\nfunction makeMagic(x, y, map, fileName) {\n  /* Remove the tutorial hacking */\n  return;\n  var magic = new RPGObject();\n  magic.locate(x, y, map);\n  magic.layer = RPGMap.Layer.Under;\n  magic.collisionFlag = false;\n\n  if (flag) {\n    magic.mod(('▼ スキン', _mまほうじんひかった));\n\n    magic.onふまれた = function (event) {\n      if (event.item === Hack.player) {\n        if (confirm('このステージを 改造(かいぞう) しますか？')) {\n          feeles.openEditor(fileName);\n        } else if (confirm('もどりますか？')) {\n          feeles.replace('stages/7/index.html');\n        }\n      }\n    };\n  } else {\n    magic.mod(('▼ スキン', _mまほうじん));\n\n    magic.onふまれた = function (event) {\n      if (event.item === Hack.player) {\n        Hack.log('ふういんのせいで つかえない');\n        var text = Hack.textarea.text;\n        feeles.setTimeout(function () {\n          if (text === Hack.textarea.text) {\n            Hack.textarea.hide();\n          }\n        }, 3000);\n      }\n    };\n  }\n}","options":{"isTrashed":false,"isText":true,"isScript":true}},{"name":"style.css","type":"text/css","lastModified":1526963763964,"composed":"body {\n\tmargin: 0;\n\tpadding: 0;\n}\n\ntextarea.log {\n    color: #fff;\n    font: bold large PixelMplus, sans-serif;\n    border: 3px solid #fff;\n    border-radius: 10px;\n    padding: 10px;\n    margin: 3px;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","options":{"isTrashed":false,"isText":true,"isScript":false}},{"name":"utils.js","type":"application/javascript","lastModified":1547038235539,"composed":"/**\n * @param next String 次に読み込むHTMLのパス\n */\nexport function gameclear(next) {\n\tHack.gameclear()\n\n\tconst button = new Sprite(165, 69)\n\tbutton.image = game.assets['resources/hackforplay/new_button_next.png']\n\tbutton.moveTo(156, 320)\n\tbutton.ontouchend = () => {\n\t\tfeeles.replace(next)\n\t}\n\tbutton.tl.delay(20).moveBy(0, -100, 10)\n\tHack.overlayGroup.addChild(button)\n\n\tHack.player.destroy()\n}\n\nconst messages = [] // 一旦メッセージを貯めておくキュー\n\n/**\n * 画面にメッセージと OK ボタンを表示する\n * @param {string|Function} text\n */\nexport function log(text) {\n\tconst tail = messages[messages.length - 1]\n\tif (tail !== text) {\n\t\t// 全く同じでなければ追加\n\t\tmessages.push(text)\n\t}\n}\n\nexport function prepareUtils() {\n\t// hack-rpg でしか使わない画像を preload\n\tgame.preload('resources/hackforplay/new_button_next.png')\n\t// canvas のテキストエリアを生成\n\tconst textArea = new TextArea(480, 160)\n\ttextArea.x = (480 - textArea.w) / 2\n\ttextArea.y = 0\n\ttextArea.margin = 14\n\ttextArea.defaultStyle = {\n\t\tcolor: '#fff',\n\t\tsize: '20',\n\t\tfamily: 'PixelMplus, sans-serif',\n\t\tweight: 'bold',\n\t\talign: 'center',\n\t\tspace: 0,\n\t\truby: null,\n\t\trubyId: null\n\t}\n\tconst okButton = new TextArea(200, 38)\n\tokButton.x = (480 - okButton.w) / 2\n\tokButton.y = 96\n\tokButton.margin = 0\n\tokButton.padding = 8\n\tokButton.background = 'rgb(251, 147, 36)'\n\tokButton.defaultStyle = {\n\t\tcolor: '#fff',\n\t\tsize: '20',\n\t\tfamily: 'PixelMplus, sans-serif',\n\t\tweight: 'bold',\n\t\talign: 'center',\n\t\tspace: 0,\n\t\truby: null,\n\t\trubyId: null\n\t}\n\tokButton.ontouchend = () => {\n\t\t// OK ボタンが押された時\n\t\tmessages.shift()\n\t\tif (messages.length === 0) {\n\t\t\t// 閉じる\n\t\t\thide()\n\t\t}\n\t}\n\tHack.on('gameclear', hide) // ゲームクリア時閉じる\n\tHack.on('gameover', hide) // ゲームオーバー時閉じる\n\tokButton.push('OK')\n\n\tgame.on('awake', () => {\n\t\tHack.menuGroup.addChild(textArea)\n\t\tHack.menuGroup.addChild(okButton)\n\t})\n\n\tgame.on('enterframe', () => {\n\t\tconst [currentMessage] = messages\n\t\tswitch (typeof currentMessage) {\n\t\t\tcase 'string':\n\t\t\t\t// テキストをそのまま表示\n\t\t\t\tshowText(currentMessage)\n\t\t\t\tbreak\n\t\t\tcase 'function':\n\t\t\t\tconst text = currentMessage()\n\t\t\t\tshowText(text)\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t})\n\n\tlet preventText = ''\n\tfunction showText(text) {\n\t\tif (!text) {\n\t\t\t// 次のメッセージに移る (OK を押したことにする)\n\t\t\tokButton.ontouchend()\n\t\t} else if (preventText !== text) {\n\t\t\ttextArea.clear() // 前の文章をクリア\n\t\t\ttextArea.push(text) // テキストを挿入\n\t\t\ttextArea.show()\n\t\t\tokButton.show()\n\t\t\tpreventText = text // 同じ文章をスキップするために保持\n\t\t}\n\t}\n\n\tfunction hide() {\n\t\ttextArea.hide()\n\t\tokButton.hide()\n\t}\n}\n","_transpileCache":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gameclear = gameclear;\nexports.log = log;\nexports.prepareUtils = prepareUtils;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\n/**\n * @param next String 次に読み込むHTMLのパス\n */\nfunction gameclear(next) {\n  Hack.gameclear();\n  var button = new Sprite(165, 69);\n  button.image = game.assets['resources/hackforplay/new_button_next.png'];\n  button.moveTo(156, 320);\n\n  button.ontouchend = function () {\n    feeles.replace(next);\n  };\n\n  button.tl.delay(20).moveBy(0, -100, 10);\n  Hack.overlayGroup.addChild(button);\n  Hack.player.destroy();\n}\n\nvar messages = []; // 一旦メッセージを貯めておくキュー\n\n/**\n * 画面にメッセージと OK ボタンを表示する\n * @param {string|Function} text\n */\n\nfunction log(text) {\n  var tail = messages[messages.length - 1];\n\n  if (tail !== text) {\n    // 全く同じでなければ追加\n    messages.push(text);\n  }\n}\n\nfunction prepareUtils() {\n  // hack-rpg でしか使わない画像を preload\n  game.preload('resources/hackforplay/new_button_next.png'); // canvas のテキストエリアを生成\n\n  var textArea = new TextArea(480, 160);\n  textArea.x = (480 - textArea.w) / 2;\n  textArea.y = 0;\n  textArea.margin = 14;\n  textArea.defaultStyle = {\n    color: '#fff',\n    size: '20',\n    family: 'PixelMplus, sans-serif',\n    weight: 'bold',\n    align: 'center',\n    space: 0,\n    ruby: null,\n    rubyId: null\n  };\n  var okButton = new TextArea(200, 38);\n  okButton.x = (480 - okButton.w) / 2;\n  okButton.y = 96;\n  okButton.margin = 0;\n  okButton.padding = 8;\n  okButton.background = 'rgb(251, 147, 36)';\n  okButton.defaultStyle = {\n    color: '#fff',\n    size: '20',\n    family: 'PixelMplus, sans-serif',\n    weight: 'bold',\n    align: 'center',\n    space: 0,\n    ruby: null,\n    rubyId: null\n  };\n\n  okButton.ontouchend = function () {\n    // OK ボタンが押された時\n    messages.shift();\n\n    if (messages.length === 0) {\n      // 閉じる\n      hide();\n    }\n  };\n\n  Hack.on('gameclear', hide); // ゲームクリア時閉じる\n\n  Hack.on('gameover', hide); // ゲームオーバー時閉じる\n\n  okButton.push('OK');\n  game.on('awake', function () {\n    Hack.menuGroup.addChild(textArea);\n    Hack.menuGroup.addChild(okButton);\n  });\n  game.on('enterframe', function () {\n    var currentMessage = messages[0];\n\n    switch ((0, _typeof2.default)(currentMessage)) {\n      case 'string':\n        // テキストをそのまま表示\n        showText(currentMessage);\n        break;\n\n      case 'function':\n        var text = currentMessage();\n        showText(text);\n\n      default:\n        break;\n    }\n  });\n  var preventText = '';\n\n  function showText(text) {\n    if (!text) {\n      // 次のメッセージに移る (OK を押したことにする)\n      okButton.ontouchend();\n    } else if (preventText !== text) {\n      textArea.clear(); // 前の文章をクリア\n\n      textArea.push(text); // テキストを挿入\n\n      textArea.show();\n      okButton.show();\n      preventText = text; // 同じ文章をスキップするために保持\n    }\n  }\n\n  function hide() {\n    textArea.hide();\n    okButton.hide();\n  }\n}","options":{"isTrashed":false,"isText":true,"isScript":true}}]